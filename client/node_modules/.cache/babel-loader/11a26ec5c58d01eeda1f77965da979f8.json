{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/src/components/InputField/InputField.tsx\";\nimport React, { useRef } from 'react';\nimport './InputField.css';\nexport const InputField = props => {\n  const {\n    type,\n    value,\n    required,\n    changed,\n    disabled\n  } = props;\n  const inputEl = useRef(null);\n\n  const valChanged = () => {\n    var _inputEl$current;\n\n    if (changed) changed((inputEl === null || inputEl === void 0 ? void 0 : (_inputEl$current = inputEl.current) === null || _inputEl$current === void 0 ? void 0 : _inputEl$current.value) || '');\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: type,\n    value: value,\n    required: required,\n    onChange: valChanged,\n    disabled: disabled,\n    ref: inputEl,\n    \"data-theme\": \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/src/components/InputField/InputField.tsx"],"names":["React","useRef","InputField","props","type","value","required","changed","disabled","inputEl","valChanged","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,OAAO,kBAAP;AAUA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAkB;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA;AAAlC,MAA+CL,KAArD;AACA,QAAMM,OAAO,GAAGR,MAAM,CAAmB,IAAnB,CAAtB;;AACA,QAAMS,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAIH,OAAJ,EACEA,OAAO,CAAC,CAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,gCAAAA,OAAO,CAAEE,OAAT,sEAAkBN,KAAlB,KAA2B,EAA5B,CAAP;AACH,GAHD;;AAKD,sBAAO;AAAO,IAAA,SAAS,EAAC,OAAjB;AACQ,IAAA,IAAI,EAAED,IADd;AAEQ,IAAA,KAAK,EAAEC,KAFf;AAGQ,IAAA,QAAQ,EAAEC,QAHlB;AAIQ,IAAA,QAAQ,EAAEI,UAJlB;AAKQ,IAAA,QAAQ,EAAEF,QALlB;AAMQ,IAAA,GAAG,EAAEC,OANb;AAOQ,kBAAW,MAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAQA,CAhBM","sourcesContent":["import React, { useRef } from 'react';\n\nimport './InputField.css';\n\ninterface Props {\n  type: 'text' | 'number' | 'email';\n  value: string;\n  required?: boolean;\n  disabled?: boolean;\n  changed?: (v: string) => unknown;\n}\n\nexport const InputField = (props: Props) => {\n  const { type, value, required, changed, disabled } = props;\n  const inputEl = useRef<HTMLInputElement>(null);\n  const valChanged = () => {\n    if (changed)\n      changed(inputEl?.current?.value || '');\n  }\n\n\treturn <input className=\"input\"\n                type={type} \n                value={value} \n                required={required}\n                onChange={valChanged}\n                disabled={disabled}\n                ref={inputEl}\n                data-theme=\"dark\"/>\n}\n\n"]},"metadata":{},"sourceType":"module"}