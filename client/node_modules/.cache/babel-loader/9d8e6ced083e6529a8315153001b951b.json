{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Button, BtnTypes, ErrorBoundary, ProductionTable, Spinner, Modal, NewMonthForm } from '../components';\nimport { DBServiceContext } from '../App';\nimport { Products } from '../models';\nimport napkinsImg from '../assets/napkins.webp';\nimport toiletsImg from '../assets/toilets.webp';\nimport './ProductionPage.css';\nexport const ProductionPage = () => {\n  const [month, setMonth] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [modalOpened, setModalOpened] = useState(false);\n  const {\n    product\n  } = useParams();\n  const dbService = useContext(DBServiceContext);\n  useEffect(() => {\n    setTimeout(() => {\n      const m = dbService.getMonth();\n      setMonth(m);\n      setLoading(false);\n    }, 1000);\n  }, [month]);\n\n  const onModalToggle = () => {\n    setModalOpened(!modalOpened);\n  };\n\n  const onModalClosed = () => {\n    setModalOpened(false);\n  };\n\n  const onCreateNewMonthCanceled = () => {\n    setModalOpened(false);\n  };\n\n  const onCreateNewMonthConfirmed = m => {\n    setMonth(m);\n    setModalOpened(false);\n  };\n\n  const imgSrc = product === Products.toilets ? toiletsImg : napkinsImg;\n\n  const spinner = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      imgSrc: imgSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, loading ? spinner() : /*#__PURE__*/React.createElement(\"section\", {\n    className: \"production-page__container\",\n    \"data-theme\": \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navigation__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"navigation-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: 'Назад',\n    type: BtnTypes.warn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"navigation-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: 'Новый месяц',\n    clicked: onModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ProductionTable, {\n    month: month,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    opened: modalOpened,\n    children: /*#__PURE__*/React.createElement(NewMonthForm, {\n      canceled: onCreateNewMonthCanceled,\n      confirmed: onCreateNewMonthConfirmed,\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }),\n    closed: onModalClosed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx"],"names":["React","useState","useEffect","useContext","Link","useParams","Button","BtnTypes","ErrorBoundary","ProductionTable","Spinner","Modal","NewMonthForm","DBServiceContext","Products","napkinsImg","toiletsImg","ProductionPage","month","setMonth","loading","setLoading","modalOpened","setModalOpened","product","dbService","setTimeout","m","getMonth","onModalToggle","onModalClosed","onCreateNewMonthCanceled","onCreateNewMonthConfirmed","imgSrc","toilets","spinner","warn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AAEA,SACEC,MADF,EAEEC,QAFF,EAKEC,aALF,EAMEC,eANF,EAOEC,OAPF,EAQEC,KARF,EASEC,YATF,QAUO,eAVP;AAYA,SAASC,gBAAT,QAAiC,QAAjC;AACA,SAAoBC,QAApB,QAAoC,WAApC;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,sBAAP;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,KAAD,CAA9C;AAGA,QAAM;AAACuB,IAAAA;AAAD,MAAYnB,SAAS,EAA3B;AACA,QAAMoB,SAAS,GAAGtB,UAAU,CAACU,gBAAD,CAA5B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,UAAU,CAAC,MAAM;AACf,YAAMC,CAAC,GAAGF,SAAS,CAACG,QAAV,EAAV;AACAT,MAAAA,QAAQ,CAACQ,CAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJS,EAIP,IAJO,CAAV;AAKD,GANQ,EAMN,CAACH,KAAD,CANM,CAAT;;AAQA,QAAMW,aAAa,GAAG,MAAM;AAC1BN,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIA,QAAMQ,aAAa,GAAG,MAAM;AAC1BP,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMQ,wBAAwB,GAAG,MAAM;AACrCR,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMS,yBAAyB,GAAIL,CAAD,IAAkB;AAClDR,IAAAA,QAAQ,CAACQ,CAAD,CAAR;AACAJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAHD;;AAKA,QAAMU,MAAM,GAAGT,OAAO,KAAKV,QAAQ,CAACoB,OAArB,GAA+BlB,UAA/B,GAA4CD,UAA3D;;AACA,QAAMoB,OAAO,GAAG,MAAM;AACpB,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEF,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND;;AAOA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEb,OAAO,GACLe,OAAO,EADF,gBAEL;AAAS,IAAA,SAAS,EAAC,4BAAnB;AAAgD,kBAAW,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,OAAd;AAAuB,IAAA,IAAI,EAAE5B,QAAQ,CAAC6B,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,CADF,CADF,eAIE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,aAAd;AAA6B,IAAA,OAAO,EAAEP,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,eAUE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEX,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAJJ,eAkBE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEI,WAAf;AACM,IAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAES,wBAAxB;AACc,MAAA,SAAS,EAAEC,yBADzB;AAEc,MAAA,OAAO,EAAER,OAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB;AAIM,IAAA,MAAM,EAAEM,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AA0BD,CApEM","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { \n  Button, \n  BtnTypes, \n  Menu, \n  MenuItem, \n  ErrorBoundary, \n  ProductionTable,\n  Spinner,\n  Modal,\n  NewMonthForm\n} from '../components';\n\nimport { DBServiceContext } from '../App';\nimport { WorkMonth, Products } from '../models';\n\nimport napkinsImg from '../assets/napkins.webp';\nimport toiletsImg from '../assets/toilets.webp';\nimport './ProductionPage.css';\n\n\nexport const ProductionPage = () => {\n  const [month, setMonth] = useState({} as WorkMonth);\n  const [loading, setLoading] = useState(true);\n  const [modalOpened, setModalOpened] = useState(false);\n\n\n  const {product} = useParams();\n  const dbService = useContext(DBServiceContext);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const m = dbService.getMonth();\n      setMonth(m);\n      setLoading(false);\n    }, 1000)\n  }, [month])\n\n  const onModalToggle = () => {\n    setModalOpened(!modalOpened);\n  }\n\n  const onModalClosed = () => {\n    setModalOpened(false);\n  }\n\n  const onCreateNewMonthCanceled = () => {\n    setModalOpened(false);\n  }\n\n  const onCreateNewMonthConfirmed = (m: WorkMonth) => {\n    setMonth(m);\n    setModalOpened(false);\n  }\n\n  const imgSrc = product === Products.toilets ? toiletsImg : napkinsImg;\n  const spinner = () => {\n    return (\n      <div className=\"spinner-container\">\n        <Spinner imgSrc={imgSrc}/> \n      </div>\n    )\n  }\n \treturn (\n    <ErrorBoundary>\n    {\n      loading \n      ? spinner()\n      : <section className=\"production-page__container\" data-theme=\"light\">\n          <nav className=\"navigation__container\">\n            <li className=\"navigation-item\">\n              <Link to=\"/\"><Button text={'Назад'} type={BtnTypes.warn}/></Link>\n            </li>\n            <li className=\"navigation-item\">\n              <Button text={'Новый месяц'} clicked={onModalToggle}/>\n            </li>\n          </nav>\n\n          <ProductionTable month={month}/>\n        </section>\n    }\n\n      <Modal opened={modalOpened} \n            children={<NewMonthForm canceled={onCreateNewMonthCanceled} \n                                    confirmed={onCreateNewMonthConfirmed} \n                                    product={product} />} \n            closed={onModalClosed}/>\n    </ErrorBoundary>\n  );\n}"]},"metadata":{},"sourceType":"module"}