{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ErrorBoundary, NewMonthForm } from '../components';\nimport { Button, CircularProgress, SwipeableDrawer, List, ListItem, ListItemText, Divider, Dialog } from '@material-ui/core/';\nimport { DBServiceContext } from '../App';\nimport './ProductionPage.css';\nexport const ProductionPage = () => {\n  const {\n    product\n  } = useParams();\n  const dbService = useContext(DBServiceContext);\n  const [month, setMonth] = useState({\n    product,\n    days: 0,\n    plan: 0,\n    ppr: 0,\n    workDays: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [menuIsOpened, setMenuIsOpened] = useState(false);\n  const [newMonthMenuOpened, setNewMonthMenuOpened] = useState(false);\n  const [changeMonthModalOpened, setChangeMonthModalOpened] = useState(false);\n  useEffect(() => {\n    (async () => {\n      try {\n        const m = await dbService.getMonth(product);\n        setMonth(m);\n      } catch (e) {} finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [product]);\n\n  const onMenuToggle = () => {\n    setMenuIsOpened(!isLoading);\n  };\n\n  const onCloseMenu = () => {\n    setMenuIsOpened(false);\n  };\n\n  const onNewMonthClick = () => {\n    setNewMonthMenuOpened(true);\n    setMenuIsOpened(false);\n  };\n\n  const onNewMonthConfirmed = m => {\n    setIsLoading(true);\n\n    (async () => {\n      try {\n        await dbService.addNewMonth(product, m.plan, m.days, m.ppr);\n        setMonth(m);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        closeNewMonthMenu();\n      }\n    })();\n  };\n\n  const onNewMonthCanceled = () => {\n    closeNewMonthMenu();\n  };\n\n  const closeNewMonthMenu = () => {\n    setNewMonthMenuOpened(false);\n  };\n\n  const onNewWorkDayClick = () => {\n    console.log('new w d');\n    setMenuIsOpened(false);\n  };\n\n  const onChangeWorkkDayClick = () => {\n    console.log('onChangeWorkkDayClick');\n    setMenuIsOpened(false);\n  };\n\n  const onChangePlanClick = () => {\n    console.log('onChangePlanClick');\n    setMenuIsOpened(false);\n  };\n\n  const onChangePprClick = () => {\n    console.log('onChangePprClick');\n    setMenuIsOpened(false);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"production-page__spinner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"12rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"production-page__nav-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"production-page__link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: onMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"TABLE\"), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: 'bottom',\n    open: menuIsOpened,\n    onClose: onCloseMenu,\n    onOpen: onMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onNewMonthClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onNewWorkDayClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0441\\u043C\\u0435\\u043D\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangeWorkkDayClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u043C\\u0435\\u043D\\u0443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangePlanClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u043B\\u0430\\u043D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangePprClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0447\\u0430\\u0441\\u044B \\u041F\\u041F\\u0420\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Dialog, {\n    open: newMonthMenuOpened,\n    onClose: closeNewMonthMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NewMonthForm, {\n    confirmed: onNewMonthConfirmed,\n    canceled: onNewMonthCanceled,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx"],"names":["React","useState","useEffect","useContext","Link","useParams","ErrorBoundary","NewMonthForm","Button","CircularProgress","SwipeableDrawer","List","ListItem","ListItemText","Divider","Dialog","DBServiceContext","ProductionPage","product","dbService","month","setMonth","days","plan","ppr","workDays","isLoading","setIsLoading","menuIsOpened","setMenuIsOpened","newMonthMenuOpened","setNewMonthMenuOpened","changeMonthModalOpened","setChangeMonthModalOpened","m","getMonth","e","onMenuToggle","onCloseMenu","onNewMonthClick","onNewMonthConfirmed","addNewMonth","console","log","message","closeNewMonthMenu","onNewMonthCanceled","onNewWorkDayClick","onChangeWorkkDayClick","onChangePlanClick","onChangePprClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { ErrorBoundary, NewMonthForm } from '../components';\nimport { \n  Button, \n  CircularProgress, \n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Dialog\n} from '@material-ui/core/';\n\nimport { DBServiceContext } from '../App';\nimport { WorkMonth, Products } from '../models';\nimport './ProductionPage.css';\n\n\nexport const ProductionPage = () => {\n  const {product} = useParams();\n  const dbService = useContext(DBServiceContext);\n\n  const [month, setMonth] = useState({\n    product,\n    days: 0,\n    plan: 0,\n    ppr: 0,\n    workDays: []\n  } as WorkMonth);\n  const [isLoading, setIsLoading] = useState(true);\n  const [menuIsOpened, setMenuIsOpened] = useState(false);\n  const [newMonthMenuOpened, setNewMonthMenuOpened] = useState(false);\n  const [changeMonthModalOpened, setChangeMonthModalOpened] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const m = await dbService.getMonth(product);\n        setMonth(m);\n      } catch(e) {\n\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [product]);\n\n  const onMenuToggle = () => {\n    setMenuIsOpened(!isLoading);\n  }\n\n  const onCloseMenu = () => {\n    setMenuIsOpened(false);\n  }\n\n  const onNewMonthClick = () => {\n    setNewMonthMenuOpened(true);\n    setMenuIsOpened(false);\n  }\n\n  const onNewMonthConfirmed = (m: WorkMonth) => {\n    setIsLoading(true);\n    (async () => {\n      try {\n        await dbService.addNewMonth(product, m.plan, m.days, m.ppr);\n        setMonth(m);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        closeNewMonthMenu();\n      }\n    })();\n  }\n\n  const onNewMonthCanceled = () => {\n    closeNewMonthMenu();\n  }\n\n  const closeNewMonthMenu = () => {\n    setNewMonthMenuOpened(false);\n  }\n\n  const onNewWorkDayClick = () => {\n    console.log('new w d')\n    setMenuIsOpened(false);\n  }\n\n  const onChangeWorkkDayClick = () => {\n    console.log('onChangeWorkkDayClick')\n    setMenuIsOpened(false);\n  }\n\n  const onChangePlanClick = () => {\n    console.log('onChangePlanClick')\n    setMenuIsOpened(false);\n  }\n\n  const onChangePprClick = () => {\n    console.log('onChangePprClick')\n    setMenuIsOpened(false);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"production-page__spinner-container\">\n      <CircularProgress size={\"12rem\"} />\n      </div> \n      )\n  }\n\n  return (\n    <ErrorBoundary>\n      <nav className=\"production-page__nav-container\">\n        <Link className=\"production-page__link\" to=\"/\">\n          <Button variant=\"outlined\" color=\"secondary\">\n            Назад \n          </Button>\n        </Link>\n        <Button variant=\"outlined\" color=\"primary\" onClick={onMenuToggle}>\n          Управление\n        </Button>\n      </nav>\n      <h2>TABLE</h2>\n\n    <SwipeableDrawer\n      anchor={'bottom'}\n      open={menuIsOpened}\n      onClose={onCloseMenu}\n      onOpen={onMenuToggle}\n      >\n        <List aria-label=\"menu\">\n          <ListItem button onClick={onNewMonthClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Новый месяц\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onNewWorkDayClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Новая смена\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onChangeWorkkDayClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить смену\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onChangePlanClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить план\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onChangePprClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить часы ППР\" />\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n\n      <Dialog open={newMonthMenuOpened} onClose={closeNewMonthMenu}>\n        <NewMonthForm confirmed={onNewMonthConfirmed} canceled={onNewMonthCanceled} product={product} />\n      </Dialog>\n    </ErrorBoundary>\n    );\n}"]},"metadata":{},"sourceType":"module"}