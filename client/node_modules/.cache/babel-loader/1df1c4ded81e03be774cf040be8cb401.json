{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/Menu/Menu.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { MenuItem, Button } from '../';\nimport './Menu.css';\nexport const Menu = props => {\n  const {\n    items,\n    selected,\n    buttonText\n  } = props;\n  const [isOpened, toggleMenu] = useState(false);\n\n  const itemSelected = i => {\n    selected(i);\n    toggleMenu(false);\n  };\n\n  const onWindowClick = e => {//toggleMenu(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousedown', onWindowClick);\n    return () => window.removeEventListener('mousedown', onWindowClick);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"menu-anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: buttonText,\n    clicked: () => toggleMenu(!isOpened),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), isOpened && ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"menu__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    text: item.text,\n    clicked: itemSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 42\n    }\n  }))), document.getElementById('menu-anchor') || document.body));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/Menu/Menu.tsx"],"names":["React","useState","useEffect","ReactDOM","MenuItem","Button","Menu","props","items","selected","buttonText","isOpened","toggleMenu","itemSelected","i","onWindowClick","e","window","addEventListener","removeEventListener","createPortal","map","item","index","text","document","getElementById","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,KAAjC;AAEA,OAAO,YAAP;AAUA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAkB;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAkCH,KAAxC;AACA,QAAM,CAACI,QAAD,EAAWC,UAAX,IAAyBX,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAe;AAClCL,IAAAA,QAAQ,CAACK,CAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMG,aAAa,GAAIC,CAAD,IAAc,CAClC;AACD,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCH,aAArC;AACA,WAAO,MAAME,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCJ,aAAxC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,uDACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEL,UAAd;AAA0B,IAAA,OAAO,EAAE,MAAME,UAAU,CAAC,CAACD,QAAF,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKIA,QAAQ,IAAIR,QAAQ,CAACiB,YAAT,eACV;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIZ,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,IAAI,EAAED,IAAI,CAACE,IAAjC;AAAuC,IAAA,OAAO,EAAEX,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CADJ,CADU,EAIVY,QAAQ,CAACC,cAAT,CAAwB,aAAxB,KAA0CD,QAAQ,CAACE,IAJzC,CALhB,CADF;AAeD,CAjCM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { MenuItem, Button } from '../';\n\nimport './Menu.css';\n\ninterface Props {\n  items: {\n    text: string;\n  }[];\n  selected: (i: string) => unknown;\n  buttonText: string;\n}\n\nexport const Menu = (props: Props) => {\n  const { items, selected, buttonText } = props;\n  const [isOpened, toggleMenu] = useState(false);\n\n  const itemSelected = (i: string) => {\n    selected(i);\n    toggleMenu(false);\n  }\n\n  const onWindowClick = (e: Event) => {\n    //toggleMenu(false);\n  }\n\n  useEffect(() => {\n    window.addEventListener('mousedown', onWindowClick);\n    return () => window.removeEventListener('mousedown', onWindowClick);\n  }, []);\n\n  return (\n    <>\n      <div id=\"menu-anchor\">\n        <Button text={buttonText} clicked={() => toggleMenu(!isOpened)}/>\n      </div>\n\n      { isOpened && ReactDOM.createPortal(\n          <nav className=\"menu__container\">\n            { items.map((item, index) => <MenuItem key={index} text={item.text} clicked={itemSelected}/>) }\n          </nav>,\n          document.getElementById('menu-anchor') || document.body\n        )\n      }\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}