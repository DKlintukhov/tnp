{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/ProductionTable/ProductionTable.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { InputField, Button, BtnTypes } from '../';\nimport './ProductionTable.css';\nimport { Products } from '../../models';\nimport { DBServiceContext } from '../../App';\n\nconst getKForToilets = avg => {\n  if (avg > 22700 && avg < 26000) {\n    return 1.1;\n  }\n\n  if (avg > 26000 && avg < 27000) {\n    return 1.2;\n  }\n\n  if (avg > 27000) {\n    return 1.25;\n  }\n\n  return 1.0;\n};\n\nconst getKForNapkins = avg => {\n  if (avg > 2100 && avg < 2401) {\n    return 1.1;\n  }\n\n  if (avg > 2400 && avg < 2501) {\n    return 1.2;\n  }\n\n  if (avg > 2500) {\n    return 1.25;\n  }\n\n  return 1.0;\n};\n\nconst getFinishedWorkDays = workDays => {\n  if (!workDays) return 0;\n  let days = 0;\n  workDays.forEach(d => {\n    if (d.amount > 0) ++days;\n  });\n  return days;\n};\n\nexport const ProductionTable = props => {\n  var _month$workDays;\n\n  const [month, setMonth] = useState({});\n  const [remainToDo, setRemainToDo] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [avgWithPpr, setAvgWithPpr] = useState(0);\n  const [needsToDo, setNeedsToDo] = useState(0);\n  const [k, setK] = useState(0);\n  const dbService = useContext(DBServiceContext);\n  const {\n    product\n  } = useParams();\n  useEffect(() => {\n    const m = props.month;\n    updateAllData(m);\n  }, [props.month]);\n\n  const onWorkDayChange = day => {\n    return async amount => {\n      await dbService.updateDay(product, day, +amount);\n      const m = { ...month\n      };\n      m.workDays[day].amount = +amount || 0;\n      setMonth(m);\n      remainToDoChanged(m);\n      avgChanged(m);\n      avgWithPprChanged(m);\n      onNeedsToDoChange(m);\n      onKChange(m);\n    };\n  };\n\n  const remainToDoChanged = m => {\n    var _m$workDays;\n\n    const res = m.plan - ((_m$workDays = m.workDays) === null || _m$workDays === void 0 ? void 0 : _m$workDays.reduce((acc, d) => acc + d.amount, 0)) || 0;\n    setRemainToDo(res > 0 ? res : 0);\n  };\n\n  const onPlanChange = async p => {\n    await dbService.updatePlan(product, +p);\n    const m = { ...month\n    };\n    m.plan = +p;\n    setMonth(m);\n    remainToDoChanged(m);\n  };\n\n  const avgChanged = m => {\n    var _m$workDays2;\n\n    let res = ((_m$workDays2 = m.workDays) === null || _m$workDays2 === void 0 ? void 0 : _m$workDays2.reduce((acc, d) => acc + d.amount, 0)) || 0;\n    const finished = getFinishedWorkDays(m.workDays);\n    res = Math.round(res / (finished || 1));\n    setAvg(res);\n  };\n\n  const avgWithPprChanged = m => {\n    var _m$workDays3;\n\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(((_m$workDays3 = m.workDays) === null || _m$workDays3 === void 0 ? void 0 : _m$workDays3.reduce((acc, d) => acc + d.amount, 0)) || 0 / (finished - m.ppr / 10 || 1));\n    setAvgWithPpr(avg);\n  };\n\n  const onPprChange = async p => {\n    await dbService.updatePpr(product, +p);\n    const m = { ...month\n    };\n    m.ppr = +p;\n    setMonth(m);\n    avgWithPprChanged(m);\n    onKChange(m);\n  };\n\n  const onNeedsToDoChange = m => {\n    var _m$workDays4;\n\n    const remainToDo = m.plan - ((_m$workDays4 = m.workDays) === null || _m$workDays4 === void 0 ? void 0 : _m$workDays4.reduce((acc, d) => acc + d.amount, 0)) || 0;\n    const finished = getFinishedWorkDays(m.workDays);\n    const res = Math.round(remainToDo / (m.days - finished || 1));\n    setNeedsToDo(res > 0 ? res : 0);\n  };\n\n  const onKChange = m => {\n    var _m$workDays5;\n\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(((_m$workDays5 = m.workDays) === null || _m$workDays5 === void 0 ? void 0 : _m$workDays5.reduce((acc, d) => acc + d.amount, 0)) || 0 / (finished - m.ppr / 10 || 1));\n    if (m.product === Products.napkins) setK(getKForNapkins(avg));\n    if (m.product === Products.toilets) setK(getKForToilets(avg));\n  };\n\n  const onDaysChange = async days => {\n    await dbService.updateDays(product, +days);\n    const m = { ...month\n    };\n    m.days = +days;\n    m.workDays = m.workDays.slice(0, +days);\n    updateAllData(m);\n  };\n\n  const onAddNewDay = async () => {\n    if (!m.workDays) return;\n    const m = { ...month\n    };\n    const day = m.workDays.length;\n    m.workDays.push({\n      day,\n      amount: 0\n    });\n    await dbService.addWorkDay(product, day, 0);\n    updateAllData(m);\n  };\n\n  const onDeleteDay = async () => {\n    const m = { ...month\n    };\n    const day = m.workDays.length;\n    m.workDays.pop();\n    await dbService.deleteWorkDay(product, day);\n    updateAllData(m);\n  };\n\n  const updateAllData = m => {\n    setMonth(m);\n    remainToDoChanged(m);\n    avgChanged(m);\n    avgWithPprChanged(m);\n    onNeedsToDoChange(m);\n    onKChange(m);\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"production-table\",\n    \"data-theme\": \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"production-table__thead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u043B\\u0430\\u043D\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"+\",\n    type: BtnTypes.primary,\n    clicked: onAddNewDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"-\",\n    type: BtnTypes.warn,\n    clicked: onDeleteDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u0441\\u0442\\u0430\\u0442\\u043E\\u043A\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(month.plan || 0),\n    changed: onPlanChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(remainToDo),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"\\u041A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0432 \\u0441\\u043C\\u0435\\u043D\\u0443\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(k),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(avg),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"\\u0427\\u0430\\u0441\\u044B \\u041F\\u041F\\u0420\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0441 \\u041F\\u041F\\u0420\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(month.ppr || 0),\n    changed: onPprChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(avgWithPpr),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"production-table_tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, (_month$workDays = month.workDays) === null || _month$workDays === void 0 ? void 0 : _month$workDays.map((workDay, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      className: \"production-table__tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"production-table__td\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(InputField, {\n      type: 'text',\n      value: String(workDay.day + 1),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"production-table__td\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(InputField, {\n      type: 'text',\n      value: String(workDay.amount),\n      changed: onWorkDayChange(workDay.day),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(\"tfoot\", {\n    className: \"production-table__tfoot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"\\u0414\\u043B\\u044F \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F \\u043F\\u043B\\u0430\\u043D\\u0430 \\u043D\\u0443\\u0436\\u043D\\u043E \\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u043F\\u043E:\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(needsToDo),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 48\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/ProductionTable/ProductionTable.tsx"],"names":["React","useState","useEffect","useContext","useParams","InputField","Button","BtnTypes","Products","DBServiceContext","getKForToilets","avg","getKForNapkins","getFinishedWorkDays","workDays","days","forEach","d","amount","ProductionTable","props","month","setMonth","remainToDo","setRemainToDo","setAvg","avgWithPpr","setAvgWithPpr","needsToDo","setNeedsToDo","k","setK","dbService","product","m","updateAllData","onWorkDayChange","day","updateDay","remainToDoChanged","avgChanged","avgWithPprChanged","onNeedsToDoChange","onKChange","res","plan","reduce","acc","onPlanChange","p","updatePlan","finished","Math","round","ppr","onPprChange","updatePpr","napkins","toilets","onDaysChange","updateDays","slice","onAddNewDay","length","push","addWorkDay","onDeleteDay","pop","deleteWorkDay","primary","warn","String","map","workDay","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nimport { InputField, Button, BtnTypes } from '../';\n\nimport './ProductionTable.css';\n\nimport { WorkMonth, WorkDay, Products } from '../../models';\n\nimport { DBServiceContext } from '../../App';\n\ninterface Props {\n  month: WorkMonth;\n}\n\nconst getKForToilets = (avg: number) => {\n  if (avg > 22700 && avg < 26000) {\n    return 1.1;\n  }\n\n  if (avg > 26000 && avg < 27000) {\n    return 1.2;\n  }\n\n  if (avg > 27000) {\n    return 1.25;\n  }\n\n  return 1.0;\n}\n\nconst getKForNapkins = (avg: number) => {\n  if (avg > 2100 && avg < 2401) {\n    return 1.1;\n  }\n  if (avg > 2400 && avg < 2501) {\n    return 1.2;\n  }\n\n  if (avg > 2500) {\n    return 1.25;\n  }\n\n  return 1.0;\n}\n\nconst getFinishedWorkDays = (workDays: WorkDay[]): number => {\n  if (!workDays) return 0;\n  let days = 0;\n  workDays.forEach((d: WorkDay) => {\n    if (d.amount > 0)\n      ++days;\n  });\n\n  return days;\n}\n\nexport const ProductionTable = (props: Props) => {\n  const [month, setMonth] = useState({} as WorkMonth);\n  const [remainToDo, setRemainToDo] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [avgWithPpr, setAvgWithPpr] = useState(0);\n  const [needsToDo, setNeedsToDo] = useState(0);\n  const [k, setK] = useState(0);\n\n  const dbService = useContext(DBServiceContext);\n  const {product} = useParams();\n\n  useEffect(() => {\n    const m = props.month;\n    updateAllData(m);\n  }, [props.month])\n\n  const onWorkDayChange = (day: number) => {\n    return async (amount: string) => {\n      await dbService.updateDay(product, day, + amount);\n      const m = {...month};\n      m.workDays[day].amount = + amount || 0;\n      setMonth(m);\n      remainToDoChanged(m);\n      avgChanged(m);\n      avgWithPprChanged(m);\n      onNeedsToDoChange(m);\n      onKChange(m);\n    }\n  }\n\n  const remainToDoChanged = (m: WorkMonth) => {\n    const res = m.plan - m.workDays?.reduce((acc, d) => acc + d.amount, 0) || 0;\n    setRemainToDo(res > 0 ? res : 0);\n  }\n\n  const onPlanChange = async (p: string) => {\n    await dbService.updatePlan(product, + p);\n    const m = {...month};\n    m.plan = + p;\n    setMonth(m);\n    remainToDoChanged(m);\n  }\n\n  const avgChanged = (m: WorkMonth) => {\n    let res = m.workDays?.reduce((acc, d) => acc + d.amount, 0) || 0;\n    const finished = getFinishedWorkDays(m.workDays);\n    res = Math.round(res / (finished || 1));\n    setAvg(res);\n  }\n\n  const avgWithPprChanged = (m: WorkMonth) => {\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(\n      m.workDays?.reduce((acc, d) => acc + d.amount, 0) || 0 / ((finished - m.ppr / 10) || 1),\n    );\n    setAvgWithPpr(avg);\n  }\n\n  const onPprChange = async (p: string) => {\n    await dbService.updatePpr(product, + p);\n    const m = {...month};\n    m.ppr = + p;\n    setMonth(m);\n    avgWithPprChanged(m);\n    onKChange(m);\n  }\n\n  const onNeedsToDoChange = (m: WorkMonth) => {\n    const remainToDo = m.plan - m.workDays?.reduce((acc, d) => acc + d.amount, 0) || 0;\n    const finished = getFinishedWorkDays(m.workDays);\n    const res = Math.round(remainToDo / ((m.days - finished) || 1));\n    setNeedsToDo(res > 0 ? res : 0);\n  }\n\n  const onKChange = (m: WorkMonth) => {\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(m.workDays?.reduce((acc, d) => acc + d.amount, 0) || 0 / ((finished - m.ppr / 10) || 1));\n    if (m.product === Products.napkins)\n      setK(getKForNapkins(avg));\n\n    if (m.product === Products.toilets)\n      setK(getKForToilets(avg));\n  }\n\n  const onDaysChange = async (days: String) => {\n    await dbService.updateDays(product, + days);\n    const m = {...month};\n    m.days = + days;\n    m.workDays = m.workDays.slice(0, + days);\n    updateAllData(m);\n  }\n\n  const onAddNewDay = async () => {\n    if (!m.workDays) return;\n    const m = {...month};\n    const day = m.workDays.length;\n    m.workDays.push({\n      day,\n      amount: 0\n    });\n    await dbService.addWorkDay(product, day, 0);\n    updateAllData(m);\n  }\n\n  const onDeleteDay = async () => {\n    const m = {...month};\n    const day = m.workDays.length;\n    m.workDays.pop();\n    await dbService.deleteWorkDay(product, day);\n    updateAllData(m);\n  }\n\n  const updateAllData = (m: WorkMonth) => {\n    setMonth(m);\n    remainToDoChanged(m);\n    avgChanged(m);\n    avgWithPprChanged(m);\n    onNeedsToDoChange(m);\n    onKChange(m);\n  }\n\n\treturn (\n    <table className=\"production-table\" data-theme=\"light\">\n      <thead className=\"production-table__thead\">\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">План</th>\n          <th className=\"production-table__td\"><Button text={\"+\"} type={BtnTypes.primary} clicked={onAddNewDay} /></th>\n          <th className=\"production-table__td\"><Button text={\"-\"} type={BtnTypes.warn} clicked={onDeleteDay} /></th>\n          <th className=\"production-table__td\">Остаток</th>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(month.plan || 0)} changed={onPlanChange}/>\n          </td>\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(remainToDo)} disabled={true}/>\n          </td>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Коэффициент</th>\n          <th className=\"production-table__td\">Среднее в смену</th>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(k)} disabled={true}/>\n          </td>\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(avg)} disabled={true}/>\n          </td>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Часы ППР</th>\n          <th className=\"production-table__td\">Среднее с ППР</th>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(month.ppr || 0)} changed={onPprChange}/>\n          </td>\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(avgWithPpr)} disabled={true}/>\n          </td>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Смена</th>\n          <th className=\"production-table__td\">Количество</th>\n        </tr>\n      </thead>\n      <tbody className=\"production-table_tbody\">\n          { month.workDays?.map((workDay, i) => {\n              return (\n                <tr key={i} className=\"production-table__tr\">\n                 <td className=\"production-table__td\">\n                    <InputField type={'text'} value={String(workDay.day + 1)} disabled={true}/>\n                 </td>\n                 <td className=\"production-table__td\">\n                    <InputField type={'text'} value={String(workDay.amount)} changed={onWorkDayChange(workDay.day)}/>\n                 </td>\n                </tr>\n              )\n            })\n          }\n\n      </tbody>\n      <tfoot className=\"production-table__tfoot\">\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Для выполнения плана нужно делать по:</th>\n          <th className=\"production-table__td\"><InputField type={'text'} value={String(needsToDo)} disabled={true}/></th>\n        </tr>\n      </tfoot>\n    </table>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}