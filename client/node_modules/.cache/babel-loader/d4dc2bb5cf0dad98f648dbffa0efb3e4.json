{"ast":null,"code":"import { data } from '../models';\nexport class DBService {\n  constructor() {\n    this.workMonth = data;\n    this.url = 'http://localhost:4000';\n  }\n\n  putMonth(m) {\n    this.workMonth = { ...m\n    };\n  } // public getMonth(): WorkMonth {\n  // \treturn this.workMonth;\n  // }\n\n\n  updateWorkDay(day, amount) {\n    this.workMonth.workDays[day].amount = amount;\n  }\n\n  updatePlan(plan) {\n    this.workMonth.plan = plan;\n  }\n\n  updatePpr(ppr) {\n    this.workMonth.ppr = ppr;\n  }\n\n  async getWorkMonth(p) {\n    const res = await fetch(`${this.url}/production/${p}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${this.url}/${p}` + `, received ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n}","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/services/DBService.ts"],"names":["data","DBService","workMonth","url","putMonth","m","updateWorkDay","day","amount","workDays","updatePlan","plan","updatePpr","ppr","getWorkMonth","p","res","fetch","ok","Error","status","json"],"mappings":"AAAA,SAA8BA,IAA9B,QAA0C,WAA1C;AAEA,OAAO,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACdC,SADc,GACFF,IADE;AAAA,SAGLG,GAHK,GAGC,uBAHD;AAAA;;AAKfC,EAAAA,QAAP,CAAgBC,CAAhB,EAA8B;AAC7B,SAAKH,SAAL,GAAiB,EAAC,GAAGG;AAAJ,KAAjB;AACA,GAPqB,CAStB;AACA;AACA;;;AAEOC,EAAAA,aAAP,CAAqBC,GAArB,EAAkCC,MAAlC,EAAkD;AACjD,SAAKN,SAAL,CAAeO,QAAf,CAAwBF,GAAxB,EAA6BC,MAA7B,GAAsCA,MAAtC;AACA;;AAEME,EAAAA,UAAP,CAAkBC,IAAlB,EAAgC;AAC/B,SAAKT,SAAL,CAAeS,IAAf,GAAsBA,IAAtB;AACA;;AAEMC,EAAAA,SAAP,CAAiBC,GAAjB,EAA8B;AAC7B,SAAKX,SAAL,CAAeW,GAAf,GAAqBA,GAArB;AACA;;AAED,QAAaC,YAAb,CAA0BC,CAA1B,EAA2D;AAC1D,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKd,GAAI,eAAcY,CAAE,EAA7B,CAAvB;;AAEG,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAW,mBAAkB,KAAKhB,GAAI,IAAGY,CAAE,EAAjC,GACb,cAAaC,GAAG,CAACI,MAAO,EADrB,CAAN;AAED;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AAEH;;AAlCqB","sourcesContent":["import { WorkMonth, Products, data } from '../models';\n\nexport class DBService {\n\tprivate workMonth = data;\n\n\tprivate readonly url = 'http://localhost:4000';\n\n\tpublic putMonth(m: WorkMonth) {\n\t\tthis.workMonth = {...m};\n\t}\n\n\t// public getMonth(): WorkMonth {\n\t// \treturn this.workMonth;\n\t// }\n\n\tpublic updateWorkDay(day: number, amount: number) {\n\t\tthis.workMonth.workDays[day].amount = amount;\n\t}\n\n\tpublic updatePlan(plan: number) {\n\t\tthis.workMonth.plan = plan;\n\t}\n\n\tpublic updatePpr(ppr: number) {\n\t\tthis.workMonth.ppr = ppr;\n\t}\n\n\tpublic async getWorkMonth(p: Products): Promise<WorkMonth> {\n\t\tconst res = await fetch(`${this.url}/production/${p}`);\n\n\t    if (!res.ok) {\n\t      throw new Error(`Could not fetch ${this.url}/${p}` +\n\t        `, received ${res.status}`)\n\t    }\n\t    return await res.json();\n\n\t}\n}"]},"metadata":{},"sourceType":"module"}