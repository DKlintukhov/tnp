{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/src/components/Button/Button.tsx\";\nimport React from 'react';\nimport './Button.css';\nexport let BtnTypes;\n\n(function (BtnTypes) {\n  BtnTypes[\"primary\"] = \"primary\";\n  BtnTypes[\"warn\"] = \"warn\";\n})(BtnTypes || (BtnTypes = {}));\n\nexport const Button = props => {\n  const {\n    clicked,\n    text,\n    type\n  } = props;\n\n  const getStyle = type => {\n    let style = 'button ';\n\n    switch (type) {\n      case BtnTypes.primary:\n        return style + 'button-primary';\n        break;\n\n      case BtnTypes.warn:\n        {\n          return style + 'button-warn';\n        }\n\n      default:\n        return style + 'button-default';\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: getStyle(type),\n    \"data-theme\": \"light\",\n    onClick: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, text);\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/src/components/Button/Button.tsx"],"names":["React","BtnTypes","Button","props","clicked","text","type","getStyle","style","primary","warn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AAEA,WAAYC,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAWZ,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAkB;AACtC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA0BH,KAAhC;;AAEA,QAAMI,QAAQ,GAAID,IAAD,IAAoB;AACnC,QAAIE,KAAK,GAAG,SAAZ;;AACA,YAAQF,IAAR;AACE,WAAKL,QAAQ,CAACQ,OAAd;AACE,eAAOD,KAAK,GAAG,gBAAf;AACA;;AAEF,WAAKP,QAAQ,CAACS,IAAd;AAAoB;AAClB,iBAAOF,KAAK,GAAG,aAAf;AACD;;AAED;AACE,eAAOA,KAAK,GAAG,gBAAf;AACA;AAXJ;AAaD,GAfD;;AAiBD,sBACG;AAAQ,IAAA,SAAS,EAAED,QAAQ,CAACD,IAAD,CAA3B;AACQ,kBAAW,OADnB;AAEQ,IAAA,OAAO,EAAEF,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,IAHH,CADH;AAOA,CA3BM","sourcesContent":["import React from 'react';\n\nimport './Button.css';\n\nexport enum BtnTypes {\n  primary = 'primary',\n  warn = 'warn',\n}\n\ninterface Props {\n  clicked?: () => unknown;\n  text: string;\n  type?: BtnTypes;\n}\n\nexport const Button = (props: Props) => {\n  const { clicked, text, type } = props;\n\n  const getStyle = (type: BtnTypes) => {\n    let style = 'button ';\n    switch (type) {\n      case BtnTypes.primary:\n        return style + 'button-primary';\n        break;\n      \n      case BtnTypes.warn: {\n        return style + 'button-warn';\n      }\n\n      default:\n        return style + 'button-default';\n        break;\n    }\n  }\n\n\treturn (\n    <button className={getStyle(type)} \n            data-theme=\"light\"\n            onClick={clicked}>\n      {text}\n    </button>\n  )\n}"]},"metadata":{},"sourceType":"module"}