{"ast":null,"code":"export class DBService {\n  constructor() {\n    this.url = 'http://localhost:4000/api';\n  }\n\n  async addNewMonth(product, plan, days, ppr) {\n    try {\n      const res = await fetch(`${this.url}/month/${product}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          product,\n          plan,\n          days,\n          ppr\n        })\n      });\n    } catch (e) {}\n  }\n\n  async getMonth(p) {\n    const res = await fetch(`${this.url}/month/${p}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${this.url}/month/${p}` + `, received ${res.status}`);\n    }\n\n    const result = await res.json();\n    return result;\n  }\n\n  async updateDay(product, day, amount) {\n    const res = await fetch(`${this.url}/day/${product}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product,\n        day,\n        amount\n      })\n    });\n  }\n\n  async updateDays(product, days) {\n    const res = await fetch(`${this.url}/days/${product}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        days\n      })\n    });\n  }\n\n  async updatePlan(product, plan) {\n    const res = await fetch(`${this.url}/plan/${product}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product,\n        plan\n      })\n    });\n  }\n\n  async updatePpr(product, ppr) {\n    const res = await fetch(`${this.url}/ppr/${product}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product,\n        ppr\n      })\n    });\n  }\n\n  async addWorkDay(product, day, amount) {\n    const res = await fetch(`${this.url}/day/${product}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product,\n        day,\n        amount\n      })\n    });\n  }\n\n  async deleteWorkDay(product, day) {\n    const res = await fetch(`${this.url}/day/${product}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product,\n        day\n      })\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/services/DBService.ts"],"names":["DBService","url","addNewMonth","product","plan","days","ppr","res","fetch","method","headers","body","JSON","stringify","e","getMonth","p","ok","Error","status","result","json","updateDay","day","amount","updateDays","updatePlan","updatePpr","addWorkDay","deleteWorkDay"],"mappings":"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","sourcesContent":["import { WorkMonth, Products } from '../models';\n\nexport class DBService {\n\tprivate readonly url = 'http://localhost:4000/api';\n\n\tpublic async addNewMonth(product: Products, plan: number, days: number, ppr: number) {\n\t\ttry {\n\t\t\tconst res = await fetch(`${this.url}/month/${product}`, {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({product, plan, days, ppr})\n\t\t\t})\n\t\t} catch(e) {\n\n\t\t}\n\n\t\t\n\t}\n\n\tpublic async getMonth(p: Products): Promise<WorkMonth> {\n\t\tconst res = await fetch(`${this.url}/month/${p}`);\n\t\t\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(`Could not fetch ${this.url}/month/${p}` +\n\t\t\t\t`, received ${res.status}`)\n\t\t}\n\n\t\tconst result = await res.json()\n\t\treturn result;\n\t\t\n\t}\n\n\tpublic async updateDay(product: Products, day: number, amount: number) {\n\t\tconst res = await fetch(`${this.url}/day/${product}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({product, day, amount})\n\t\t})\n\t}\n\n\tpublic async updateDays(product: Products, days: number) {\n\t\tconst res = await fetch(`${this.url}/days/${product}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({days})\n\t\t})\n\t}\n\n\tpublic async updatePlan(product: Products, plan: number) {\n\t\tconst res = await fetch(`${this.url}/plan/${product}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({product, plan})\n\t\t})\n\t}\n\n\tpublic async updatePpr(product: Products, ppr: number) {\n\t\tconst res = await fetch(`${this.url}/ppr/${product}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({product, ppr})\n\t\t})\n\t}\n\n\tpublic async addWorkDay(product: Products, day: number, amount: number) {\n\t\tconst res = await fetch(`${this.url}/day/${product}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({product, day, amount})\n\t\t})\n\t}\n\n\tpublic async deleteWorkDay(product: Products, day: number) {\n\t\tconst res = await fetch(`${this.url}/day/${product}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({product, day})\n\t\t})\n\t}\n}"]},"metadata":{},"sourceType":"module"}