{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/ChangeMonthForm/ChangeMonthForm.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { InputField, Button, BtnTypes } from '../';\nimport './ChangeMonthForm.css';\nexport const ChangeMonthForm = props => {\n  const {\n    month,\n    confirmed,\n    canceled\n  } = props;\n  const [days, setDays] = useState(0);\n  const [plan, setPlan] = useState(0);\n  const [ppr, setPpr] = useState(0);\n  useEffect(() => {\n    setDays(month.days);\n    setPlan(month.plan);\n    setPpr(month.ppr);\n  }, [month]);\n\n  const onDaysChange = days => {\n    setDays(+days);\n  };\n\n  const onPlanChange = plan => {\n    setPlan(+plan);\n  };\n\n  const onPprChange = ppr => {\n    setPpr(+ppr);\n  };\n\n  const onConfirmed = () => {\n    confirmed(plan, days, ppr);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"form__fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u043B\\u0430\\u043D\"), /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(plan),\n    changed: onPlanChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0441\\u043C\\u0435\\u043D\"), /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(days),\n    changed: onDaysChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, \"\\u0427\\u0430\\u0441\\u044B \\u041F\\u041F\\u0420\"), /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(ppr),\n    changed: onPprChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"form__controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: 'Отмена',\n    type: BtnTypes.warn,\n    clicked: canceled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: 'Изменить',\n    type: BtnTypes.primary,\n    clicked: onConfirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/ChangeMonthForm/ChangeMonthForm.tsx"],"names":["React","useState","useEffect","InputField","Button","BtnTypes","ChangeMonthForm","props","month","confirmed","canceled","days","setDays","plan","setPlan","ppr","setPpr","onDaysChange","onPlanChange","onPprChange","onConfirmed","String","warn","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { InputField, Button, BtnTypes } from '../';\nimport { WorkMonth, Products, WorkDay } from '../../models';\n\nimport './ChangeMonthForm.css';\n\ninterface Props {\n\tmonth: WorkMonth;\n\tconfirmed: (plan: number, days: number, ppr: number) => unknown;\n  canceled: () => unknown;\n}\n\nexport const ChangeMonthForm = (props: Props) => {\n\tconst {month, confirmed, canceled} = props;\n\tconst [days, setDays] = useState(0);\n\tconst [plan, setPlan] = useState(0);\n\tconst [ppr, setPpr] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetDays(month.days);\n\t\tsetPlan(month.plan);\n\t\tsetPpr(month.ppr);\n\t}, [month]);\n\n\tconst onDaysChange = (days: string) => {\n\t\tsetDays(+ days);\n\t}\n\n\tconst onPlanChange = (plan: string) => {\n\t\tsetPlan(+ plan);\n\t}\n\n\tconst onPprChange = (ppr: string) => {\n\t\tsetPpr(+ ppr);\n\t}\n\n\tconst onConfirmed = () => {\n\t\tconfirmed(plan, days, ppr);\n\t}\n\n  return (\n    <form className=\"form\">\n      <section className=\"form__fields\">\n        <div className=\"form__field\">\n          <label>План</label>\n          <InputField type={'text'} value={String(plan)} changed={onPlanChange} />           \n        </div>\n        <div className=\"form__field\">\n           <label>Количество смен</label>\n          <InputField type={'text'} value={String(days)} changed={onDaysChange} />         \n        </div>\n        <div className=\"form__field\">\n           <label>Часы ППР</label>\n          <InputField type={'text'} value={String(ppr)} changed={onPprChange} />         \n        </div>\n      </section>\n\n\n      <section className=\"form__controls\">\n        <Button text={'Отмена'} type={BtnTypes.warn} clicked={canceled}/>\n        <Button text={'Изменить'} type={BtnTypes.primary} clicked={onConfirmed}/>\n      </section>\n    </form>\n  )\n}"]},"metadata":{},"sourceType":"module"}