{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/Modal/Modal.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\nexport const Modal = props => {\n  const {\n    children,\n    opened,\n    closed\n  } = props;\n  const modalRef = useRef(null);\n  useEffect(() => {\n    (document.getElementById('root') || window).addEventListener('mousedown', onWindowClick);\n    return () => (document.getElementById('root') || window).removeEventListener('mousedown', onWindowClick);\n  }, []);\n\n  const onWindowClick = e => {\n    debugger;\n    e.stopPropagation();\n    const clikedOnModal = e.path.find(el => el === modalRef.current);\n    if (!clikedOnModal) closed();\n  };\n\n  if (opened) {\n    return ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"section\", {\n      ref: modalRef,\n      className: \"modal\",\n      \"data-theme\": \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, children), document.body);\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/Modal/Modal.tsx"],"names":["React","useEffect","useRef","ReactDOM","Modal","props","children","opened","closed","modalRef","document","getElementById","window","addEventListener","onWindowClick","removeEventListener","e","stopPropagation","clikedOnModal","path","find","el","current","createPortal","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP;AAQA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAkB;AACtC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAA6BH,KAAnC;AACC,QAAMI,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAACS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,KAAmCC,MAApC,EAA4CC,gBAA5C,CAA6D,WAA7D,EAA0EC,aAA1E;AACA,WAAO,MAAM,CAACJ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,KAAmCC,MAApC,EAA4CG,mBAA5C,CAAgE,WAAhE,EAA6ED,aAA7E,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,aAAa,GAAIE,CAAD,IAAY;AAChC;AACAA,IAAAA,CAAC,CAACC,eAAF;AACA,UAAMC,aAAa,GAAGF,CAAC,CAACG,IAAF,CAAOC,IAAP,CAAaC,EAAD,IAAqBA,EAAE,KAAKZ,QAAQ,CAACa,OAAjD,CAAtB;AAEA,QAAI,CAACJ,aAAL,EACEV,MAAM;AACT,GAPD;;AASA,MAAID,MAAJ,EAAY;AACV,WAAQJ,QAAQ,CAACoB,YAAT,eACE;AAAS,MAAA,GAAG,EAAEd,QAAd;AAAwB,MAAA,SAAS,EAAC,OAAlC;AAA0C,oBAAW,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,QADH,CADF,EAIEI,QAAQ,CAACc,IAJX,CAAR;AAKD;;AAED,SAAO,IAAP;AACD,CA3BM","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.css';\n\ninterface Props {\n\tchildren: JSX.Element;\n\topened: boolean;\n  closed: () => unknown;\n}\n\nexport const Modal = (props: Props) => {\n\tconst {children, opened, closed} = props;\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    (document.getElementById('root') || window).addEventListener('mousedown', onWindowClick);\n    return () => (document.getElementById('root') || window).removeEventListener('mousedown', onWindowClick);\n  }, []);\n\n  const onWindowClick = (e: any) => {\n    debugger\n    e.stopPropagation();\n    const clikedOnModal = e.path.find((el: HTMLElement) => el === modalRef.current);\n\n    if (!clikedOnModal)\n      closed();\n  }\n\n  if (opened) {\n    return (ReactDOM.createPortal(\n              <section ref={modalRef} className=\"modal\" data-theme=\"light\">\n                {children}\n              </section>,\n              document.body))\n  }\n\n  return null;\n}"]},"metadata":{},"sourceType":"module"}