{"ast":null,"code":"export class DBService {\n  constructor() {\n    this.url = 'http://localhost:4000/api';\n  }\n\n  async getMonth(p) {\n    try {\n      debugger;\n      const res = await fetch(`${this.url}/month/${p}`);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${this.url}/month/${p}` + `, received ${res.status}`);\n      }\n\n      return await res.json();\n    } catch (e) {\n      console.log(e.message);\n      return await {};\n    }\n  }\n\n  async updateWorkDay(p, day, amount) {\n    console.log(amount);\n  }\n\n  async updatePlan(p, plan) {\n    console.log(plan);\n  }\n\n  async updatePpr(p, ppr) {\n    const res = await fetch(`${this.url}/updatePpr/${p}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(ppr)\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/services/DBService.ts"],"names":["DBService","url","getMonth","p","res","fetch","ok","Error","status","json","e","console","log","message","updateWorkDay","day","amount","updatePlan","plan","updatePpr","ppr","method","headers","body","JSON","stringify"],"mappings":"AAEA,OAAO,MAAMA,SAAN,CAAgB;AAAA;AAAA,SACLC,GADK,GACC,2BADD;AAAA;;AAGtB,QAAaC,QAAb,CAAsBC,CAAtB,EAAuD;AACtD,QAAI;AACH;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,GAAI,UAASE,CAAE,EAAxB,CAAvB;;AAEG,UAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAW,mBAAkB,KAAKN,GAAI,UAASE,CAAE,EAAvC,GACb,cAAaC,GAAG,CAACI,MAAO,EADrB,CAAN;AAED;;AAED,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AAEH,KAXD,CAWE,OAAOC,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACA,aAAO,MAAM,EAAb;AACA;AAED;;AAED,QAAaC,aAAb,CAA2BX,CAA3B,EAAwCY,GAAxC,EAAqDC,MAArD,EAAqE;AACpEL,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA;;AAED,QAAaC,UAAb,CAAwBd,CAAxB,EAAqCe,IAArC,EAAmD;AAClDP,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA;;AAED,QAAaC,SAAb,CAAuBhB,CAAvB,EAAoCiB,GAApC,EAAiD;AAChD,UAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,GAAI,cAAaE,CAAE,EAA5B,EAA+B;AACrDkB,MAAAA,MAAM,EAAE,MAD6C;AAElDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFyC;AAKlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;AAL4C,KAA/B,CAAvB;AAOA;;AAtCqB","sourcesContent":["import { WorkMonth, Products } from '../models';\n\nexport class DBService {\n\tprivate readonly url = 'http://localhost:4000/api';\n\n\tpublic async getMonth(p: Products): Promise<WorkMonth> {\n\t\ttry {\n\t\t\tdebugger\n\t\t\tconst res = await fetch(`${this.url}/month/${p}`);\n\n\t\t    if (!res.ok) {\n\t\t      throw new Error(`Could not fetch ${this.url}/month/${p}` +\n\t\t        `, received ${res.status}`)\n\t\t    }\n\n\t\t    return await res.json();\n\n\t\t} catch (e) {\n\t\t\tconsole.log(e.message);\n\t\t\treturn await {} as WorkMonth;\n\t\t}\n\t\t\n\t}\n\n\tpublic async updateWorkDay(p: Products, day: number, amount: number) {\n\t\tconsole.log(amount)\n\t}\n\n\tpublic async updatePlan(p: Products, plan: number) {\n\t\tconsole.log(plan)\n\t}\n\n\tpublic async updatePpr(p: Products, ppr: number) {\n\t\tconst res = await fetch(`${this.url}/updatePpr/${p}`, {\n\t\t\tmethod: 'POST',\n\t\t    headers: {\n\t\t      'Content-Type': 'application/json'\n\t\t    },\n\t\t    body: JSON.stringify(ppr)\n\t\t})\n\t}\n}"]},"metadata":{},"sourceType":"module"}