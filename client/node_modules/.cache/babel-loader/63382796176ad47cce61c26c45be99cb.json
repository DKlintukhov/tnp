{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ErrorBoundary, NewMonthForm, NewWorkDayForm, SimpleForm } from '../components';\nimport { Button, CircularProgress, SwipeableDrawer, List, ListItem, ListItemText, Divider, Dialog } from '@material-ui/core/';\nimport { DBServiceContext } from '../App';\nimport './ProductionPage.css';\nexport const ProductionPage = () => {\n  const {\n    product\n  } = useParams();\n  const dbService = useContext(DBServiceContext);\n  const [month, setMonth] = useState({\n    product,\n    days: 0,\n    plan: 0,\n    ppr: 0,\n    workDays: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [menuIsOpened, setMenuIsOpened] = useState(false);\n  const [newMonthMenuOpened, setNewMonthMenuOpened] = useState(false);\n  const [newWorkDayMenuOpened, setNewWorkDayMenuOpened] = useState(false);\n  const [changePlanMenuOpened, setChangePlanMenuOpened] = useState(false);\n  const [changeMonthModalOpened, setChangeMonthModalOpened] = useState(false);\n  useEffect(() => {\n    (async () => {\n      try {\n        const m = await dbService.getMonth(product);\n        console.log(m);\n        setMonth(m);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  const onMenuToggle = () => {\n    setMenuIsOpened(!isLoading);\n  };\n\n  const onCloseMenu = () => {\n    setMenuIsOpened(false);\n  };\n\n  const onNewMonthClick = () => {\n    setNewMonthMenuOpened(true);\n    setMenuIsOpened(false);\n  };\n\n  const onNewMonthConfirmed = m => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        await dbService.addNewMonth(product, m.plan, m.days, m.ppr);\n        setMonth(m);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        closeNewMonthMenu();\n      }\n    })();\n  };\n\n  const onNewMonthCanceled = () => {\n    closeNewMonthMenu();\n  };\n\n  const closeNewMonthMenu = () => {\n    setNewMonthMenuOpened(false);\n  };\n\n  const onNewWorkDayClick = () => {\n    setNewWorkDayMenuOpened(true);\n    setMenuIsOpened(false);\n  };\n\n  const closeNewWorkDayMenu = () => {\n    setNewWorkDayMenuOpened(false);\n  };\n\n  const onNewWorkDayCanceled = () => {\n    setNewWorkDayMenuOpened(false);\n  };\n\n  const onNewWorkDayConfirmed = amount => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = { ...month\n        };\n        const day = newMonth.workDays.length;\n        newMonth.workDays.push({\n          day,\n          amount\n        });\n        await dbService.addWorkDay(product, day, amount);\n        setMonth(newMonth);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setNewWorkDayMenuOpened(false);\n      }\n    })();\n  };\n\n  const onChangeWorkkDayClick = () => {\n    setMenuIsOpened(false);\n  };\n\n  const onChangePlanClick = () => {\n    setChangePlanMenuOpened(true);\n    setMenuIsOpened(false);\n  };\n\n  const closeChangePlanForm = () => {\n    setChangePlanMenuOpened(false);\n  };\n\n  const onChangePlanConfirmed = plan => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = { ...month\n        };\n        newMonth.plan = plan;\n        await dbService.updatePlan(product, plan);\n        setMonth(newMonth);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setChangePlanMenuOpened(false);\n      }\n    })();\n  };\n\n  const onChangePlanCanceled = () => {\n    setChangePlanMenuOpened(false);\n  };\n\n  const onChangePprClick = () => {\n    console.log('onChangePprClick');\n    setMenuIsOpened(false);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"production-page__spinner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"12rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"production-page__nav-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"production-page__link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: onMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\")), month && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, month === null || month === void 0 ? void 0 : month.plan), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, month === null || month === void 0 ? void 0 : month.days), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, month === null || month === void 0 ? void 0 : month.ppr), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, month === null || month === void 0 ? void 0 : month.workDays.map(i => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 40\n    }\n  }, i.amount, \" \")))), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: 'bottom',\n    open: menuIsOpened,\n    onClose: onCloseMenu,\n    onOpen: onMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onNewMonthClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onNewWorkDayClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0441\\u043C\\u0435\\u043D\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangeWorkkDayClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u043C\\u0435\\u043D\\u0443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangePlanClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u043B\\u0430\\u043D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangePprClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0447\\u0430\\u0441\\u044B \\u041F\\u041F\\u0420\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Dialog, {\n    open: newMonthMenuOpened,\n    onClose: closeNewMonthMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NewMonthForm, {\n    confirmed: onNewMonthConfirmed,\n    canceled: onNewMonthCanceled,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: newWorkDayMenuOpened,\n    onClose: closeNewWorkDayMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NewWorkDayForm, {\n    confirmed: onNewWorkDayConfirmed,\n    canceled: onNewWorkDayCanceled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: changePlanMenuOpened,\n    onClose: closeChangePlanForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SimpleForm, {\n    confirmed: onChangePlanConfirmed,\n    canceled: onChangePlanCanceled,\n    title: \"План\",\n    cancelBtnText: \"Отмена\",\n    confirmBtnText: \"Изменить\",\n    label: \"Количество\",\n    default: month.ppr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx"],"names":["React","useState","useEffect","useContext","Link","useParams","ErrorBoundary","NewMonthForm","NewWorkDayForm","SimpleForm","Button","CircularProgress","SwipeableDrawer","List","ListItem","ListItemText","Divider","Dialog","DBServiceContext","ProductionPage","product","dbService","month","setMonth","days","plan","ppr","workDays","isLoading","setIsLoading","menuIsOpened","setMenuIsOpened","newMonthMenuOpened","setNewMonthMenuOpened","newWorkDayMenuOpened","setNewWorkDayMenuOpened","changePlanMenuOpened","setChangePlanMenuOpened","changeMonthModalOpened","setChangeMonthModalOpened","m","getMonth","console","log","e","message","onMenuToggle","onCloseMenu","onNewMonthClick","onNewMonthConfirmed","addNewMonth","closeNewMonthMenu","onNewMonthCanceled","onNewWorkDayClick","closeNewWorkDayMenu","onNewWorkDayCanceled","onNewWorkDayConfirmed","amount","newMonth","day","length","push","addWorkDay","onChangeWorkkDayClick","onChangePlanClick","closeChangePlanForm","onChangePlanConfirmed","updatePlan","onChangePlanCanceled","onChangePprClick","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { \n  ErrorBoundary, \n  NewMonthForm, \n  NewWorkDayForm,\n  SimpleForm\n} from '../components';\nimport { \n  Button, \n  CircularProgress, \n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Dialog\n} from '@material-ui/core/';\n\nimport { DBServiceContext } from '../App';\nimport { WorkMonth, Products } from '../models';\nimport './ProductionPage.css';\n\n\nexport const ProductionPage = () => {\n  const {product} = useParams();\n  const dbService = useContext(DBServiceContext);\n\n  const [month, setMonth] = useState({\n    product,\n    days: 0,\n    plan: 0,\n    ppr: 0,\n    workDays: []\n  } as WorkMonth);\n  const [isLoading, setIsLoading] = useState(true);\n  const [menuIsOpened, setMenuIsOpened] = useState(false);\n  const [newMonthMenuOpened, setNewMonthMenuOpened] = useState(false);\n  const [newWorkDayMenuOpened, setNewWorkDayMenuOpened] = useState(false);\n  const [changePlanMenuOpened, setChangePlanMenuOpened] = useState(false);\n  const [changeMonthModalOpened, setChangeMonthModalOpened] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const m = await dbService.getMonth(product);\n        console.log(m)\n        setMonth(m);\n      } catch(e) {\n        console.log(e.message)\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  const onMenuToggle = () => {\n    setMenuIsOpened(!isLoading);\n  }\n\n  const onCloseMenu = () => {\n    setMenuIsOpened(false);\n  }\n\n\n  const onNewMonthClick = () => {\n    setNewMonthMenuOpened(true);\n    setMenuIsOpened(false);\n  }\n  const onNewMonthConfirmed = (m: WorkMonth) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        await dbService.addNewMonth(product, m.plan, m.days, m.ppr);\n        setMonth(m);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        closeNewMonthMenu();\n      }\n    })();\n  }\n  const onNewMonthCanceled = () => {\n    closeNewMonthMenu();\n  }\n  const closeNewMonthMenu = () => {\n    setNewMonthMenuOpened(false);\n  }\n\n\n\n  const onNewWorkDayClick = () => {\n    setNewWorkDayMenuOpened(true);\n    setMenuIsOpened(false);\n  }\n  const closeNewWorkDayMenu = () => {\n    setNewWorkDayMenuOpened(false);\n  }\n  const onNewWorkDayCanceled = () => {\n    setNewWorkDayMenuOpened(false);\n  }\n  const onNewWorkDayConfirmed = (amount: number) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = {...month};\n        const day = newMonth.workDays.length;\n        newMonth.workDays.push({day, amount});\n        await dbService.addWorkDay(product, day, amount);\n        setMonth(newMonth);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setNewWorkDayMenuOpened(false);\n      }\n    })();\n  }\n\n\n\n  const onChangeWorkkDayClick = () => {\n    setMenuIsOpened(false);\n  }\n\n\n\n  const onChangePlanClick = () => {\n    setChangePlanMenuOpened(true);\n    setMenuIsOpened(false);\n  }\n  const closeChangePlanForm = () => {\n    setChangePlanMenuOpened(false);\n  }\n  const onChangePlanConfirmed = (plan: number) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = {...month};\n        newMonth.plan = plan;\n        await dbService.updatePlan(product, plan);\n        setMonth(newMonth);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setChangePlanMenuOpened(false);\n      }\n    })();\n  }\n  const onChangePlanCanceled = () => {\n    setChangePlanMenuOpened(false);\n  }\n\n\n\n\n  const onChangePprClick = () => {\n    console.log('onChangePprClick')\n    setMenuIsOpened(false);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"production-page__spinner-container\">\n      <CircularProgress size={\"12rem\"} />\n      </div> \n      )\n  }\n\n  return (\n    <ErrorBoundary>\n      <nav className=\"production-page__nav-container\">\n        <Link className=\"production-page__link\" to=\"/\">\n          <Button variant=\"outlined\" color=\"secondary\">\n            Назад \n          </Button>\n        </Link>\n        <Button variant=\"outlined\" color=\"primary\" onClick={onMenuToggle}>\n          Управление\n        </Button>\n      </nav>\n      {month && <>      \n        <p>{month?.plan}</p>\n        <p>{month?.days}</p>\n        <p>{month?.ppr}</p>\n        <p>{month?.workDays.map((i) => <p>{i.amount} </p>)}</p> \n      </>}\n\n    <SwipeableDrawer\n      anchor={'bottom'}\n      open={menuIsOpened}\n      onClose={onCloseMenu}\n      onOpen={onMenuToggle}\n      >\n        <List aria-label=\"menu\">\n          <ListItem button onClick={onNewMonthClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Новый месяц\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onNewWorkDayClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Новая смена\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onChangeWorkkDayClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить смену\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onChangePlanClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить план\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button onClick={onChangePprClick}>\n            <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить часы ППР\" />\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n\n      <Dialog open={newMonthMenuOpened} onClose={closeNewMonthMenu}>\n        <NewMonthForm confirmed={onNewMonthConfirmed} canceled={onNewMonthCanceled} product={product} />\n      </Dialog>\n\n      <Dialog open={newWorkDayMenuOpened} onClose={closeNewWorkDayMenu}>\n        <NewWorkDayForm confirmed={onNewWorkDayConfirmed} canceled={onNewWorkDayCanceled}  />\n      </Dialog>\n\n      \n      <Dialog open={changePlanMenuOpened} onClose={closeChangePlanForm}>\n        <SimpleForm \n        confirmed={onChangePlanConfirmed} \n        canceled={onChangePlanCanceled}\n        title={\"План\"}\n        cancelBtnText={\"Отмена\"}\n        confirmBtnText={\"Изменить\"}\n        label={\"Количество\"}\n        default={month.ppr}/>\n      </Dialog>\n    </ErrorBoundary>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}