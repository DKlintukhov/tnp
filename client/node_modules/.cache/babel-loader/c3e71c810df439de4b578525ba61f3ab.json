{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ErrorBoundary, NewMonthForm, NewWorkDayForm, SimpleForm, ChangeWorkDayForm, ProductionTable } from '../components';\nimport { Button, CircularProgress, SwipeableDrawer, List, ListItem, ListItemText, Divider, Dialog } from '@material-ui/core/';\nimport { DBServiceContext } from '../App';\nimport './ProductionPage.css';\nexport const ProductionPage = () => {\n  const {\n    product\n  } = useParams();\n  const dbService = useContext(DBServiceContext);\n  const [month, setMonth] = useState({\n    product,\n    days: 0,\n    plan: 0,\n    ppr: 0,\n    workDays: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [menuIsOpened, setMenuIsOpened] = useState(false);\n  const [newMonthMenuOpened, setNewMonthMenuOpened] = useState(false);\n  const [newWorkDayMenuOpened, setNewWorkDayMenuOpened] = useState(false);\n  const [changePlanMenuOpened, setChangePlanMenuOpened] = useState(false);\n  const [changeDaysMenuOpened, setChangeDaysMenuOpened] = useState(false);\n  const [changePprMenuOpened, setShangePprMenuOpened] = useState(false);\n  const [changeWorkDayMenuOpened, setShangeWorkDayMenuOpened] = useState(false);\n  useEffect(() => {\n    (async () => {\n      try {\n        const m = await dbService.getMonth(product);\n        setMonth(m);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [product, dbService]);\n\n  const onMenuToggle = () => {\n    setMenuIsOpened(!isLoading);\n  };\n\n  const onCloseMenu = () => {\n    setMenuIsOpened(false);\n  };\n\n  const onNewMonthClick = () => {\n    setNewMonthMenuOpened(true);\n    setMenuIsOpened(false);\n  };\n\n  const onNewMonthConfirmed = m => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        await dbService.addNewMonth(product, m.plan, m.days, m.ppr);\n        setMonth(m);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        closeNewMonthMenu();\n      }\n    })();\n  };\n\n  const onNewMonthCanceled = () => {\n    closeNewMonthMenu();\n  };\n\n  const closeNewMonthMenu = () => {\n    setNewMonthMenuOpened(false);\n  };\n\n  const onNewWorkDayClick = () => {\n    setNewWorkDayMenuOpened(true);\n    setMenuIsOpened(false);\n  };\n\n  const closeNewWorkDayMenu = () => {\n    setNewWorkDayMenuOpened(false);\n  };\n\n  const onNewWorkDayCanceled = () => {\n    setNewWorkDayMenuOpened(false);\n  };\n\n  const onNewWorkDayConfirmed = amount => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = { ...month\n        };\n        const day = newMonth.workDays.length;\n        newMonth.workDays.push({\n          day,\n          amount\n        });\n        await dbService.addWorkDay(product, day, amount);\n        setMonth(newMonth);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setNewWorkDayMenuOpened(false);\n      }\n    })();\n  };\n\n  const onChangePlanClick = () => {\n    setChangePlanMenuOpened(true);\n    setMenuIsOpened(false);\n  };\n\n  const closeChangePlanForm = () => {\n    setChangePlanMenuOpened(false);\n  };\n\n  const onChangePlanConfirmed = plan => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = { ...month\n        };\n        newMonth.plan = plan;\n        await dbService.updatePlan(product, plan);\n        setMonth(newMonth);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setChangePlanMenuOpened(false);\n      }\n    })();\n  };\n\n  const onChangePlanCanceled = () => {\n    setChangePlanMenuOpened(false);\n  };\n\n  const onChangePprClick = () => {\n    setMenuIsOpened(false);\n    setShangePprMenuOpened(true);\n  };\n\n  const closeChangePprForm = () => {\n    setShangePprMenuOpened(false);\n  };\n\n  const onChangePprCanceled = () => {\n    setShangePprMenuOpened(false);\n  };\n\n  const onChangePprConfirmed = ppr => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = { ...month\n        };\n        newMonth.ppr = ppr;\n        await dbService.updatePpr(product, ppr);\n        setMonth(newMonth);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setShangePprMenuOpened(false);\n      }\n    })();\n  };\n\n  const onChangeWorkkDayClick = () => {\n    setMenuIsOpened(false);\n    setShangeWorkDayMenuOpened(true);\n  };\n\n  const closeChangeWorkDayMenu = () => {\n    setShangeWorkDayMenuOpened(false);\n  };\n\n  const onChangeWorkDayCanceled = () => {\n    setShangeWorkDayMenuOpened(false);\n  };\n\n  const onChangeWorkDayConfirmed = workDay => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = { ...month\n        };\n        newMonth.workDays[workDay.day] = workDay;\n        console.log(workDay);\n        await dbService.updateDay(product, workDay.day, workDay.amount);\n        setMonth(newMonth);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setShangeWorkDayMenuOpened(false);\n      }\n    })();\n  };\n\n  const onChangeDaysClick = () => {\n    setMenuIsOpened(false);\n    setChangeDaysMenuOpened(true);\n  };\n\n  const closeChangeDaysMenuOpened = () => {\n    setChangeDaysMenuOpened(false);\n  };\n\n  const onChangeDaysCanceled = () => {\n    setChangeDaysMenuOpened(false);\n  };\n\n  const onChangeDaysConfirmed = days => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = { ...month\n        };\n        newMonth.days = days;\n        await dbService.updateDays(product, days);\n        setMonth(newMonth);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setChangeDaysMenuOpened(false);\n      }\n    })();\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"production-page__spinner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"12rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"production-page__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"production-page__nav-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"production-page__link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: onMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"production-page__table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProductionTable, {\n    month: month,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: 'bottom',\n    open: menuIsOpened,\n    onClose: onCloseMenu,\n    onOpen: onMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onNewMonthClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onNewWorkDayClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0441\\u043C\\u0435\\u043D\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangeWorkkDayClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u043C\\u0435\\u043D\\u0443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangePlanClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u043B\\u0430\\u043D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangeDaysClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0441\\u043C\\u0435\\u043D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: onChangePprClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"production-page__item-text\",\n    inset: true,\n    primary: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0447\\u0430\\u0441\\u044B \\u041F\\u041F\\u0420\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Dialog, {\n    open: newMonthMenuOpened,\n    onClose: closeNewMonthMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewMonthForm, {\n    confirmed: onNewMonthConfirmed,\n    canceled: onNewMonthCanceled,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: newWorkDayMenuOpened,\n    onClose: closeNewWorkDayMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewWorkDayForm, {\n    confirmed: onNewWorkDayConfirmed,\n    canceled: onNewWorkDayCanceled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: changePlanMenuOpened,\n    onClose: closeChangePlanForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleForm, {\n    confirmed: onChangePlanConfirmed,\n    canceled: onChangePlanCanceled,\n    title: \"План\",\n    cancelBtnText: \"Отмена\",\n    confirmBtnText: \"Изменить\",\n    label: \"Количество\",\n    defaultVal: month.plan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: changePprMenuOpened,\n    onClose: closeChangePprForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleForm, {\n    confirmed: onChangePprConfirmed,\n    canceled: onChangePprCanceled,\n    title: \"Часы ППР\",\n    cancelBtnText: \"Отмена\",\n    confirmBtnText: \"Изменить\",\n    label: \"Часы\",\n    defaultVal: month.ppr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: changeWorkDayMenuOpened,\n    onClose: closeChangeWorkDayMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChangeWorkDayForm, {\n    confirmed: onChangeWorkDayConfirmed,\n    canceled: onChangeWorkDayCanceled,\n    workDays: month.workDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: changeDaysMenuOpened,\n    onClose: closeChangeDaysMenuOpened,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleForm, {\n    confirmed: onChangeDaysConfirmed,\n    canceled: onChangeDaysCanceled,\n    title: \"Смены\",\n    cancelBtnText: \"Отмена\",\n    confirmBtnText: \"Изменить\",\n    label: \"Количество смен\",\n    defaultVal: month.days,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/pages/ProductionPage.tsx"],"names":["React","useState","useEffect","useContext","Link","useParams","ErrorBoundary","NewMonthForm","NewWorkDayForm","SimpleForm","ChangeWorkDayForm","ProductionTable","Button","CircularProgress","SwipeableDrawer","List","ListItem","ListItemText","Divider","Dialog","DBServiceContext","ProductionPage","product","dbService","month","setMonth","days","plan","ppr","workDays","isLoading","setIsLoading","menuIsOpened","setMenuIsOpened","newMonthMenuOpened","setNewMonthMenuOpened","newWorkDayMenuOpened","setNewWorkDayMenuOpened","changePlanMenuOpened","setChangePlanMenuOpened","changeDaysMenuOpened","setChangeDaysMenuOpened","changePprMenuOpened","setShangePprMenuOpened","changeWorkDayMenuOpened","setShangeWorkDayMenuOpened","m","getMonth","e","console","log","message","onMenuToggle","onCloseMenu","onNewMonthClick","onNewMonthConfirmed","addNewMonth","closeNewMonthMenu","onNewMonthCanceled","onNewWorkDayClick","closeNewWorkDayMenu","onNewWorkDayCanceled","onNewWorkDayConfirmed","amount","newMonth","day","length","push","addWorkDay","onChangePlanClick","closeChangePlanForm","onChangePlanConfirmed","updatePlan","onChangePlanCanceled","onChangePprClick","closeChangePprForm","onChangePprCanceled","onChangePprConfirmed","updatePpr","onChangeWorkkDayClick","closeChangeWorkDayMenu","onChangeWorkDayCanceled","onChangeWorkDayConfirmed","workDay","updateDay","onChangeDaysClick","closeChangeDaysMenuOpened","onChangeDaysCanceled","onChangeDaysConfirmed","updateDays"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { \n  ErrorBoundary, \n  NewMonthForm, \n  NewWorkDayForm,\n  SimpleForm,\n  ChangeWorkDayForm,\n  ProductionTable\n} from '../components';\nimport { \n  Button, \n  CircularProgress, \n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Dialog\n} from '@material-ui/core/';\n\nimport { DBServiceContext } from '../App';\nimport { WorkMonth, WorkDay } from '../models';\nimport './ProductionPage.css';\n\n\nexport const ProductionPage = () => {\n  const {product} = useParams();\n  const dbService = useContext(DBServiceContext);\n\n  const [month, setMonth] = useState({\n    product,\n    days: 0,\n    plan: 0,\n    ppr: 0,\n    workDays: []\n  } as WorkMonth);\n  const [isLoading, setIsLoading] = useState(true);\n  const [menuIsOpened, setMenuIsOpened] = useState(false);\n  const [newMonthMenuOpened, setNewMonthMenuOpened] = useState(false);\n  const [newWorkDayMenuOpened, setNewWorkDayMenuOpened] = useState(false);\n  const [changePlanMenuOpened, setChangePlanMenuOpened] = useState(false);\n  const [changeDaysMenuOpened, setChangeDaysMenuOpened] = useState(false);\n  const [changePprMenuOpened, setShangePprMenuOpened] = useState(false);\n  const [changeWorkDayMenuOpened, setShangeWorkDayMenuOpened] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const m = await dbService.getMonth(product);\n        setMonth(m);\n      } catch(e) {\n        console.log(e.message)\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [product, dbService]);\n\n  const onMenuToggle = () => {\n    setMenuIsOpened(!isLoading);\n  }\n\n  const onCloseMenu = () => {\n    setMenuIsOpened(false);\n  }\n\n\n  const onNewMonthClick = () => {\n    setNewMonthMenuOpened(true);\n    setMenuIsOpened(false);\n  }\n  const onNewMonthConfirmed = (m: WorkMonth) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        await dbService.addNewMonth(product, m.plan, m.days, m.ppr);\n        setMonth(m);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        closeNewMonthMenu();\n      }\n    })();\n  }\n  const onNewMonthCanceled = () => {\n    closeNewMonthMenu();\n  }\n  const closeNewMonthMenu = () => {\n    setNewMonthMenuOpened(false);\n  }\n\n\n  const onNewWorkDayClick = () => {\n    setNewWorkDayMenuOpened(true);\n    setMenuIsOpened(false);\n  }\n  const closeNewWorkDayMenu = () => {\n    setNewWorkDayMenuOpened(false);\n  }\n  const onNewWorkDayCanceled = () => {\n    setNewWorkDayMenuOpened(false);\n  }\n  const onNewWorkDayConfirmed = (amount: number) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = {...month};\n        const day = newMonth.workDays.length;\n        newMonth.workDays.push({day, amount});\n        await dbService.addWorkDay(product, day, amount);\n        setMonth(newMonth);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setNewWorkDayMenuOpened(false);\n      }\n    })();\n  }\n\n\n  const onChangePlanClick = () => {\n    setChangePlanMenuOpened(true);\n    setMenuIsOpened(false);\n  }\n  const closeChangePlanForm = () => {\n    setChangePlanMenuOpened(false);\n  }\n  const onChangePlanConfirmed = (plan: number) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = {...month};\n        newMonth.plan = plan;\n        await dbService.updatePlan(product, plan);\n        setMonth(newMonth);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setChangePlanMenuOpened(false);\n      }\n    })();\n  }\n  const onChangePlanCanceled = () => {\n    setChangePlanMenuOpened(false);\n  }\n\n\n  const onChangePprClick = () => {\n    setMenuIsOpened(false);\n    setShangePprMenuOpened(true);\n  }\n  const closeChangePprForm = () => {\n    setShangePprMenuOpened(false);\n  }\n  const onChangePprCanceled = () => {\n    setShangePprMenuOpened(false);\n  }\n  const onChangePprConfirmed = (ppr: number) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = {...month};\n        newMonth.ppr = ppr;\n        await dbService.updatePpr(product, ppr);\n        setMonth(newMonth);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setShangePprMenuOpened(false);\n      }\n    })();\n  }\n\n\n  const onChangeWorkkDayClick = () => {\n    setMenuIsOpened(false);\n    setShangeWorkDayMenuOpened(true);\n  }\n  const closeChangeWorkDayMenu = () => {\n    setShangeWorkDayMenuOpened(false);\n  }\n  const onChangeWorkDayCanceled = () => {\n    setShangeWorkDayMenuOpened(false);\n  }\n  const onChangeWorkDayConfirmed = (workDay: WorkDay) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = {...month};\n        newMonth.workDays[workDay.day] = workDay;\n        console.log(workDay)\n        await dbService.updateDay(product, workDay.day, workDay.amount);\n        setMonth(newMonth);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setShangeWorkDayMenuOpened(false);\n      }\n    })();\n  }\n\n  const onChangeDaysClick = () => {\n    setMenuIsOpened(false);\n    setChangeDaysMenuOpened(true);\n  }\n  const closeChangeDaysMenuOpened = () => {\n    setChangeDaysMenuOpened(false);\n  }\n  const onChangeDaysCanceled = () => {\n    setChangeDaysMenuOpened(false);\n  }\n  const onChangeDaysConfirmed = (days: number) => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const newMonth = {...month};\n        newMonth.days = days;\n        await dbService.updateDays(product, days);\n        setMonth(newMonth);\n      } catch(e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n        setChangeDaysMenuOpened(false);\n      }\n    })();\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"production-page__spinner-container\">\n        <CircularProgress size={\"12rem\"} />\n      </div> \n    )\n  }\n\n  return (\n    <ErrorBoundary>\n\n      <section className=\"production-page__container\">\n         <nav className=\"production-page__nav-container\">\n          <Link className=\"production-page__link\" to=\"/\">\n            <Button variant=\"outlined\" color=\"secondary\">\n              Назад \n            </Button>\n          </Link>\n          <Button variant=\"outlined\" color=\"primary\" onClick={onMenuToggle}>\n            Управление\n          </Button>\n        </nav>\n        \n        <section className=\"production-page__table-container\">\n          <ProductionTable month={month} />\n        </section>\n        \n\n        <SwipeableDrawer\n          anchor={'bottom'}\n          open={menuIsOpened}\n          onClose={onCloseMenu}\n          onOpen={onMenuToggle}\n          >\n          <List aria-label=\"menu\">\n            <ListItem button onClick={onNewMonthClick}>\n              <ListItemText className=\"production-page__item-text\" inset primary=\"Новый месяц\" />\n            </ListItem>\n\n            <Divider />\n\n            <ListItem button onClick={onNewWorkDayClick}>\n              <ListItemText className=\"production-page__item-text\" inset primary=\"Новая смена\" />\n            </ListItem>\n\n            <Divider />\n\n            <ListItem button onClick={onChangeWorkkDayClick}>\n              <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить смену\" />\n            </ListItem>\n\n            <Divider />\n\n            <ListItem button onClick={onChangePlanClick}>\n              <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить план\" />\n            </ListItem>\n\n            <ListItem button onClick={onChangeDaysClick}>\n              <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить количество смен\" />\n            </ListItem>\n\n            <Divider />\n\n            <ListItem button onClick={onChangePprClick}>\n              <ListItemText className=\"production-page__item-text\" inset primary=\"Изменить часы ППР\" />\n            </ListItem>\n          </List>\n        </SwipeableDrawer>\n\n        <Dialog open={newMonthMenuOpened} onClose={closeNewMonthMenu}>\n          <NewMonthForm confirmed={onNewMonthConfirmed} canceled={onNewMonthCanceled} product={product} />\n        </Dialog>\n\n        <Dialog open={newWorkDayMenuOpened} onClose={closeNewWorkDayMenu}>\n          <NewWorkDayForm confirmed={onNewWorkDayConfirmed} canceled={onNewWorkDayCanceled}  />\n        </Dialog>\n\n        \n        <Dialog open={changePlanMenuOpened} onClose={closeChangePlanForm}>\n          <SimpleForm \n          confirmed={onChangePlanConfirmed} \n          canceled={onChangePlanCanceled}\n          title={\"План\"}\n          cancelBtnText={\"Отмена\"}\n          confirmBtnText={\"Изменить\"}\n          label={\"Количество\"}\n          defaultVal={month.plan}/>\n        </Dialog>\n\n        <Dialog open={changePprMenuOpened} onClose={closeChangePprForm}>\n          <SimpleForm \n          confirmed={onChangePprConfirmed} \n          canceled={onChangePprCanceled}\n          title={\"Часы ППР\"}\n          cancelBtnText={\"Отмена\"}\n          confirmBtnText={\"Изменить\"}\n          label={\"Часы\"}\n          defaultVal={month.ppr}/>\n        </Dialog>\n\n        <Dialog open={changeWorkDayMenuOpened} onClose={closeChangeWorkDayMenu}>\n          <ChangeWorkDayForm \n            confirmed={onChangeWorkDayConfirmed} \n            canceled={onChangeWorkDayCanceled} \n            workDays={month.workDays} />\n        </Dialog>\n\n        <Dialog open={changeDaysMenuOpened} onClose={closeChangeDaysMenuOpened}>\n          <SimpleForm \n          confirmed={onChangeDaysConfirmed} \n          canceled={onChangeDaysCanceled}\n          title={\"Смены\"}\n          cancelBtnText={\"Отмена\"}\n          confirmBtnText={\"Изменить\"}\n          label={\"Количество смен\"}\n          defaultVal={month.days}/>\n        </Dialog>\n      </section>\n\n    </ErrorBoundary>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}