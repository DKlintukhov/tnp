{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/src/components/Menu/Menu.tsx\";\nimport React, { useState } from 'react';\nimport { MenuItem, Button } from '../';\nimport './Menu.css';\nexport const Menu = props => {\n  const {\n    items,\n    anchor\n  } = props;\n  const [isOpened, toggleMenu] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"menu-anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: 'Управление',\n    clicked: () => toggleMenu(!isOpened),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), \"ReactDOM.createPortal(\", /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"menu__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    text: item.text,\n    clicked: item.clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 40\n    }\n  }))), \", document.getElementById(anchor) || document.body )\");\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/src/components/Menu/Menu.tsx"],"names":["React","useState","MenuItem","Button","Menu","props","items","anchor","isOpened","toggleMenu","map","item","index","text","clicked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,KAAjC;AAEA,OAAO,YAAP;AAUA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAkB;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAA1B;AACA,QAAM,CAACG,QAAD,EAAWC,UAAX,IAAyBR,QAAQ,CAAC,KAAD,CAAvC;AAEA,sBACE,uDACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,YAAd;AAA4B,IAAA,OAAO,EAAE,MAAMQ,UAAU,CAAC,CAACD,QAAF,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,yCAKI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,IAAI,EAAED,IAAI,CAACE,IAAjC;AAAuC,IAAA,OAAO,EAAEF,IAAI,CAACG,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CADJ,CALJ,yDADF;AAaD,CAjBM","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { MenuItem, Button } from '../';\n\nimport './Menu.css';\n\ninterface Props {\n  items: {\n    text: string;\n    clicked: (t: string) => unknown;\n  }[];\n  anchor: string;\n}\n\nexport const Menu = (props: Props) => {\n  const { items, anchor } = props;\n  const [isOpened, toggleMenu] = useState(false);\n  \n  return (\n    <>\n      <div id=\"menu-anchor\">\n        <Button text={'Управление'} clicked={() => toggleMenu(!isOpened)}/>\n      </div>\n      ReactDOM.createPortal(\n        <nav className=\"menu__container\">\n          { items.map((item, index) => <MenuItem key={index} text={item.text} clicked={item.clicked}/>) }\n        </nav>,\n        document.getElementById(anchor) || document.body\n      )\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}