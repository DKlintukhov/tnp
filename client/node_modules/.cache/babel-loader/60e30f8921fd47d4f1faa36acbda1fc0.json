{"ast":null,"code":"var _jsxFileName = \"/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/ProductionTable/ProductionTable.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { InputField } from '../';\nimport './ProductionTable.css';\nimport { Products } from '../../models';\nimport { DBServiceContext } from '../../App';\n\nconst getKForToilets = avg => {\n  if (avg > 22700 && avg < 26000) {\n    return 1.1;\n  }\n\n  if (avg > 26000 && avg < 27000) {\n    return 1.2;\n  }\n\n  if (avg > 27000) {\n    return 1.25;\n  }\n\n  return 1.0;\n};\n\nconst getKForNapkins = avg => {\n  if (avg > 2100 && avg < 2401) {\n    return 1.1;\n  }\n\n  if (avg > 2400 && avg < 2501) {\n    return 1.2;\n  }\n\n  if (avg > 2500) {\n    return 1.25;\n  }\n\n  return 1.0;\n};\n\nconst getFinishedWorkDays = workDays => {\n  let days = 0;\n  workDays.forEach(d => {\n    if (d.amount > 0) ++days;\n  });\n  return days;\n};\n\nexport const ProductionTable = props => {\n  var _month$workDays;\n\n  const [month, setMonth] = useState({});\n  const [remainToDo, setRemainToDo] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [avgWithPpr, setAvgWithPpr] = useState(0);\n  const [needsToDo, setNeedsToDo] = useState(0);\n  const [k, setK] = useState(0);\n  const [days, setDays] = useState(0);\n  const dbService = useContext(DBServiceContext);\n  const {\n    product\n  } = useParams();\n  useEffect(() => {\n    const m = props.month;\n    updateAllData(m);\n  }, [props.month]);\n\n  const onWorkDayChange = day => {\n    return amount => {\n      const m = { ...month\n      };\n      m.workDays[day].amount = +amount || 0;\n      setMonth(m);\n      remainToDoChanged(m);\n      avgChanged(m);\n      avgWithPprChanged(m);\n      onNeedsToDoChange(m);\n      onKChange(m);\n      dbService.updateDay(product, day, +amount);\n    };\n  };\n\n  const remainToDoChanged = m => {\n    const res = m.plan - m.workDays.reduce((acc, d) => acc + d.amount, 0);\n    setRemainToDo(res > 0 ? res : 0);\n  };\n\n  const onPlanChange = p => {\n    const m = { ...month\n    };\n    m.plan = +p;\n    setMonth(m);\n    remainToDoChanged(m);\n    dbService.updatePlan(product, +p);\n  };\n\n  const avgChanged = m => {\n    let res = m.workDays.reduce((acc, d) => acc + d.amount, 0);\n    const finished = getFinishedWorkDays(m.workDays);\n    res = Math.round(res / (finished || 1));\n    setAvg(res);\n  };\n\n  const avgWithPprChanged = m => {\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(m.workDays.reduce((acc, d) => acc + d.amount, 0) / (finished - m.ppr / 10 || 1));\n    setAvgWithPpr(avg);\n  };\n\n  const onPprChange = p => {\n    const m = { ...month\n    };\n    m.ppr = +p;\n    setMonth(m);\n    avgWithPprChanged(m);\n    onKChange(m);\n    dbService.updatePpr(product, +p);\n  };\n\n  const onNeedsToDoChange = m => {\n    const remainToDo = m.plan - m.workDays.reduce((acc, d) => acc + d.amount, 0);\n    const finished = getFinishedWorkDays(m.workDays);\n    const res = Math.round(remainToDo / (m.days - finished || 1));\n    setNeedsToDo(res > 0 ? res : 0);\n  };\n\n  const onKChange = m => {\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(m.workDays.reduce((acc, d) => acc + d.amount, 0) / (finished - m.ppr / 10 || 1));\n    if (m.product === Products.napkins) setK(getKForNapkins(avg));\n    if (m.product === Products.toilets) setK(getKForToilets(avg));\n  };\n\n  const onDaysChange = days => {\n    const m = { ...month\n    };\n    m.days = +days;\n    dbService.updateDays(product, +days);\n    updateAllData(m);\n  };\n\n  const updateAllData = m => {\n    setMonth(m);\n    remainToDoChanged(m);\n    avgChanged(m);\n    avgWithPprChanged(m);\n    onNeedsToDoChange(m);\n    onKChange(m);\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"production-table\",\n    \"data-theme\": \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"production-table__thead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u043B\\u0430\\u043D\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u0441\\u0442\\u0430\\u0442\\u043E\\u043A\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0441\\u043C\\u0435\\u043D\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(month.plan),\n    changed: onPlanChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(remainToDo),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(days),\n    changed: onDaysChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"\\u041A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0432 \\u0441\\u043C\\u0435\\u043D\\u0443\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(k),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(avg),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"\\u0427\\u0430\\u0441\\u044B \\u041F\\u041F\\u0420\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0441 \\u041F\\u041F\\u0420\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(month.ppr),\n    changed: onPprChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(avgWithPpr),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"production-table_tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, (_month$workDays = month.workDays) === null || _month$workDays === void 0 ? void 0 : _month$workDays.map(workDay => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: workDay.day,\n      className: \"production-table__tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"production-table__td\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(InputField, {\n      type: 'text',\n      value: String(workDay.day + 1),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"production-table__td\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(InputField, {\n      type: 'text',\n      value: String(workDay.amount),\n      changed: onWorkDayChange(workDay.day),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(\"tfoot\", {\n    className: \"production-table__tfoot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"production-table__tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"\\u0414\\u043B\\u044F \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F \\u043F\\u043B\\u0430\\u043D\\u0430 \\u043D\\u0443\\u0436\\u043D\\u043E \\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u043F\\u043E:\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"production-table__td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    type: 'text',\n    value: String(needsToDo),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 48\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/lightmare/Documents/dev/web/tnp_plan/client/src/components/ProductionTable/ProductionTable.tsx"],"names":["React","useState","useEffect","useContext","useParams","InputField","Products","DBServiceContext","getKForToilets","avg","getKForNapkins","getFinishedWorkDays","workDays","days","forEach","d","amount","ProductionTable","props","month","setMonth","remainToDo","setRemainToDo","setAvg","avgWithPpr","setAvgWithPpr","needsToDo","setNeedsToDo","k","setK","setDays","dbService","product","m","updateAllData","onWorkDayChange","day","remainToDoChanged","avgChanged","avgWithPprChanged","onNeedsToDoChange","onKChange","updateDay","res","plan","reduce","acc","onPlanChange","p","updatePlan","finished","Math","round","ppr","onPprChange","updatePpr","napkins","toilets","onDaysChange","updateDays","String","map","workDay"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nimport { InputField } from '../';\n\nimport './ProductionTable.css';\n\nimport { WorkMonth, WorkDay, Products } from '../../models';\n\nimport { DBServiceContext } from '../../App';\n\ninterface Props {\n  month: WorkMonth;\n}\n\nconst getKForToilets = (avg: number) => {\n  if (avg > 22700 && avg < 26000) {\n    return 1.1;\n  }\n\n  if (avg > 26000 && avg < 27000) {\n    return 1.2;\n  }\n\n  if (avg > 27000) {\n    return 1.25;\n  }\n\n  return 1.0;\n}\n\nconst getKForNapkins = (avg: number) => {\n  if (avg > 2100 && avg < 2401) {\n    return 1.1;\n  }\n  if (avg > 2400 && avg < 2501) {\n    return 1.2;\n  }\n\n  if (avg > 2500) {\n    return 1.25;\n  }\n\n  return 1.0;\n}\n\nconst getFinishedWorkDays = (workDays: WorkDay[]): number => {\n  let days = 0;\n  workDays.forEach((d: WorkDay) => {\n    if (d.amount > 0)\n      ++days;\n  });\n\n  return days;\n}\n\nexport const ProductionTable = (props: Props) => {\n  const [month, setMonth] = useState({} as WorkMonth);\n  const [remainToDo, setRemainToDo] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [avgWithPpr, setAvgWithPpr] = useState(0);\n  const [needsToDo, setNeedsToDo] = useState(0);\n  const [k, setK] = useState(0);\n  const [days, setDays] = useState(0);\n\n  const dbService = useContext(DBServiceContext);\n  const {product} = useParams();\n\n  useEffect(() => {\n    const m = props.month;\n    updateAllData(m);\n  }, [props.month])\n\n  const onWorkDayChange = (day: number) => {\n    return (amount: string) => {\n      const m = {...month};\n      m.workDays[day].amount = + amount || 0;\n      setMonth(m);\n      remainToDoChanged(m);\n      avgChanged(m);\n      avgWithPprChanged(m);\n      onNeedsToDoChange(m);\n      onKChange(m);\n      dbService.updateDay(product, day, + amount);\n    }\n  }\n\n  const remainToDoChanged = (m: WorkMonth) => {\n    const res = m.plan - m.workDays.reduce((acc, d) => acc + d.amount, 0);\n    setRemainToDo(res > 0 ? res : 0);\n  }\n\n  const onPlanChange = (p: string) => {\n    const m = {...month};\n    m.plan = + p;\n    setMonth(m);\n    remainToDoChanged(m);\n    dbService.updatePlan(product, + p);\n  }\n\n  const avgChanged = (m: WorkMonth) => {\n    let res = m.workDays.reduce((acc, d) => acc + d.amount, 0);\n    const finished = getFinishedWorkDays(m.workDays);\n    res = Math.round(res / (finished || 1));\n    setAvg(res);\n  }\n\n  const avgWithPprChanged = (m: WorkMonth) => {\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(\n      m.workDays.reduce((acc, d) => acc + d.amount, 0) / ((finished - m.ppr / 10) || 1),\n    );\n    setAvgWithPpr(avg);\n  }\n\n  const onPprChange = (p: string) => {\n    const m = {...month};\n    m.ppr = + p;\n    setMonth(m);\n    avgWithPprChanged(m);\n    onKChange(m);\n    dbService.updatePpr(product, + p);\n  }\n\n  const onNeedsToDoChange = (m: WorkMonth) => {\n    const remainToDo = m.plan - m.workDays.reduce((acc, d) => acc + d.amount, 0);\n    const finished = getFinishedWorkDays(m.workDays);\n    const res = Math.round(remainToDo / ((m.days - finished) || 1));\n    setNeedsToDo(res > 0 ? res : 0);\n  }\n\n  const onKChange = (m: WorkMonth) => {\n    const finished = getFinishedWorkDays(m.workDays);\n    const avg = Math.round(m.workDays.reduce((acc, d) => acc + d.amount, 0) / ((finished - m.ppr / 10) || 1));\n    if (m.product === Products.napkins)\n      setK(getKForNapkins(avg));\n\n    if (m.product === Products.toilets)\n      setK(getKForToilets(avg));\n  }\n\n  const onDaysChange = (days: String) => {\n    const m = {...month};\n    m.days = + days;\n    dbService.updateDays(product, + days);\n    updateAllData(m);\n  }\n\n  const updateAllData = (m: WorkMonth) => {\n    setMonth(m);\n    remainToDoChanged(m);\n    avgChanged(m);\n    avgWithPprChanged(m);\n    onNeedsToDoChange(m);\n    onKChange(m);\n  }\n\n\treturn (\n    <table className=\"production-table\" data-theme=\"light\">\n      <thead className=\"production-table__thead\">\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">План</th>\n          <th className=\"production-table__td\">Остаток</th>\n          <th className=\"production-table__td\">Всего смен</th>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(month.plan)} changed={onPlanChange}/>\n          </td>\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(remainToDo)} disabled={true}/>\n          </td>\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(days)} changed={onDaysChange} />\n          </td>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Коэффициент</th>\n          <th className=\"production-table__td\">Среднее в смену</th>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(k)} disabled={true}/>\n          </td>\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(avg)} disabled={true}/>\n          </td>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Часы ППР</th>\n          <th className=\"production-table__td\">Среднее с ППР</th>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(month.ppr)} changed={onPprChange}/>\n          </td>\n          <td className=\"production-table__td\">\n            <InputField type={'text'} value={String(avgWithPpr)} disabled={true}/>\n          </td>\n        </tr>\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Смена</th>\n          <th className=\"production-table__td\">Количество</th>\n        </tr>\n      </thead>\n      <tbody className=\"production-table_tbody\">\n          { month.workDays?.map((workDay) => {\n              return (\n                <tr key={workDay.day} className=\"production-table__tr\">\n                 <td className=\"production-table__td\">\n                    <InputField type={'text'} value={String(workDay.day + 1)} disabled={true}/>\n                 </td>\n                 <td className=\"production-table__td\">\n                    <InputField type={'text'} value={String(workDay.amount)} changed={onWorkDayChange(workDay.day)}/>\n                 </td>\n                </tr>\n              )\n            })\n          }\n      </tbody>\n      <tfoot className=\"production-table__tfoot\">\n        <tr className=\"production-table__tr\">\n          <th className=\"production-table__td\">Для выполнения плана нужно делать по:</th>\n          <th className=\"production-table__td\"><InputField type={'text'} value={String(needsToDo)} disabled={true}/></th>\n        </tr>\n      </tfoot>\n    </table>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}